import{_ as s,c as a,o as n,U as l}from"./chunks/framework.BWp8c4Qg.js";const p="/blog/assets/svPCPR.ity0wsQp.png",u=JSON.parse('{"title":"算法思想","description":"","frontmatter":{},"headers":[],"relativePath":"algo-data-str/algorithm/mind.md","filePath":"algo-data-str/algorithm/mind.md","lastUpdated":1711817753000}'),e={name:"algo-data-str/algorithm/mind.md"},o=l(`<h1 id="算法思想" tabindex="-1">算法思想 <a class="header-anchor" href="#算法思想" aria-label="Permalink to &quot;算法思想&quot;">​</a></h1><h2 id="递归" tabindex="-1">递归 <a class="header-anchor" href="#递归" aria-label="Permalink to &quot;递归&quot;">​</a></h2><p>所有的递归问题都可以用递推公式来表示</p><h3 id="递归需要满足的三个条件" tabindex="-1">递归需要满足的三个条件 <a class="header-anchor" href="#递归需要满足的三个条件" aria-label="Permalink to &quot;递归需要满足的三个条件&quot;">​</a></h3><ul><li><p>一个问题的解可以分解为几个子问题的解</p></li><li><p>这个问题与分解之后的子问题，除了数据规模不同，求解思路完全一样</p></li><li><p>存在递归终止条件</p></li></ul><h3 id="递归框架" tabindex="-1">递归框架 <a class="header-anchor" href="#递归框架" aria-label="Permalink to &quot;递归框架&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> recursive </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">level</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> x</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 结束条件</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">endCondition</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 当前层逻辑</span></span>
<span class="line"><span style="color:#82AAFF;">  curLevelProcess</span><span style="color:#F07178;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 下一层逻辑</span></span>
<span class="line"><span style="color:#82AAFF;">  recursive</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">level</span><span style="color:#89DDFF;"> +</span><span style="color:#F78C6C;"> 1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="尾递归调用" tabindex="-1">尾递归调用 <a class="header-anchor" href="#尾递归调用" aria-label="Permalink to &quot;尾递归调用&quot;">​</a></h3><p>函数调用会在内存形成一个&quot;调用记录&quot;，又称&quot;调用帧&quot;（call frame），保存调用位置和内部变量等信息。</p><p><img src="`+p+`" alt="img"></p><p>在递归中，如果尾调用自身，就称为尾递归。递归非常消耗内存，因为需要同时保存成千上百个调用记录，很容易发生&quot;栈溢出&quot;错误（stack overflow）。对于尾递归来说，由于只存在一个调用记录，所以永远不会发生&quot;栈溢出&quot;错误。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> factorial</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">n</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;"> ===</span><span style="color:#F78C6C;"> 1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> *</span><span style="color:#82AAFF;"> factorial</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>上面代码是一个阶乘函数，计算n的阶乘，最多需要保存n个调用记录，复杂度 O(n) 。 如果改写成尾递归，只保留一个调用记录，复杂度 O(1) 。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> factorial</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">n</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> total</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;"> ===</span><span style="color:#F78C6C;"> 1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> total</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#82AAFF;"> factorial</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> *</span><span style="color:#BABED8;"> total</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="贪心算法" tabindex="-1">贪心算法 <a class="header-anchor" href="#贪心算法" aria-label="Permalink to &quot;贪心算法&quot;">​</a></h2><p>取最大值，经典题目买 <a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/description/" target="_blank" rel="noreferrer">卖股票的最佳时机</a></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 终点代码</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> max </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">max </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">max</span><span style="color:#BABED8;">(prev</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> cur)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="双指针法" tabindex="-1">双指针法 <a class="header-anchor" href="#双指针法" aria-label="Permalink to &quot;双指针法&quot;">​</a></h2><p>前后双指针，有时也叫快慢指针，通常可实现O(n)级别的时间复杂度。用处很多，不做示例</p><h2 id="归并" tabindex="-1">归并 <a class="header-anchor" href="#归并" aria-label="Permalink to &quot;归并&quot;">​</a></h2><p>归并排序，自下而上，经典题归并排序</p><h2 id="分治" tabindex="-1">分治 <a class="header-anchor" href="#分治" aria-label="Permalink to &quot;分治&quot;">​</a></h2><p>大问题化解为小问题</p><h2 id="滑动窗口" tabindex="-1">滑动窗口 <a class="header-anchor" href="#滑动窗口" aria-label="Permalink to &quot;滑动窗口&quot;">​</a></h2><p>用于寻找字符串中的某些特性的子字符串</p><p>经典题目</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> lengthOfLongestSubstring</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">s</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> rk</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> s</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  for</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">rk</span><span style="color:#89DDFF;"> +</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#82AAFF;"> condition</span><span style="color:#F07178;">()) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // 不断地移动右指针</span></span>
<span class="line"><span style="color:#89DDFF;">      ++</span><span style="color:#BABED8;">rk</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="回溯" tabindex="-1">回溯 <a class="header-anchor" href="#回溯" aria-label="Permalink to &quot;回溯&quot;">​</a></h2><p>可以理解为回归树</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> []</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> backtrack</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">path</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> condition</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> ...</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">judge</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">condition</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;"> //满足条件</span></span>
<span class="line"><span style="color:#BABED8;">    res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">path</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> select</span><span style="color:#89DDFF;"> of</span><span style="color:#BABED8;"> selectList</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">condition</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">select</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // 走某条路</span></span>
<span class="line"><span style="color:#82AAFF;">    backtrack</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">path</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> newSelectList</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //返回上一个十字路口</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="哈希缓存" tabindex="-1">哈希缓存 <a class="header-anchor" href="#哈希缓存" aria-label="Permalink to &quot;哈希缓存&quot;">​</a></h2><p>利用额外空间，空间换时间，将O(n^2)转换为O(n)。示例题目</p><h3 id="示例-两数之和" tabindex="-1">示例：<a href="https://leetcode-cn.com/problems/two-sum/" target="_blank" rel="noreferrer">两数之和</a> <a class="header-anchor" href="#示例-两数之和" aria-label="Permalink to &quot;示例：[两数之和](https://leetcode-cn.com/problems/two-sum/)&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> twoSum </span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">nums</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> target</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;"> const</span><span style="color:#BABED8;"> temp</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;"> for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> nums</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">  var</span><span style="color:#BABED8;"> diff</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> target</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> nums</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">temp</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">diff</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">!=</span><span style="color:#89DDFF;"> undefined</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">   return</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">temp</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">diff</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> i</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#BABED8;">  temp</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">nums</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">]] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> i</span></span>
<span class="line"><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="示例-公平的糖果交换" tabindex="-1">示例：<a href="https://leetcode-cn.com/problems/fair-candy-swap/description/" target="_blank" rel="noreferrer">公平的糖果交换</a> <a class="header-anchor" href="#示例-公平的糖果交换" aria-label="Permalink to &quot;示例：[公平的糖果交换](https://leetcode-cn.com/problems/fair-candy-swap/description/)&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> fairCandySwap </span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">A</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> B</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;"> let</span><span style="color:#BABED8;"> sumA</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#C792EA;"> let</span><span style="color:#BABED8;"> sumB</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;"> for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> item</span><span style="color:#89DDFF;"> of</span><span style="color:#BABED8;"> A</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  sumA</span><span style="color:#89DDFF;"> +=</span><span style="color:#BABED8;"> item</span></span>
<span class="line"><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#C792EA;"> const</span><span style="color:#BABED8;"> set</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> Set</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;"> for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> item</span><span style="color:#89DDFF;"> of</span><span style="color:#BABED8;"> B</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  sumB</span><span style="color:#89DDFF;"> +=</span><span style="color:#BABED8;"> item</span></span>
<span class="line"><span style="color:#BABED8;">  set</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">item</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#C792EA;"> const</span><span style="color:#BABED8;"> target</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> sumA</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> sumB</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;"> for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> j</span><span style="color:#89DDFF;"> of</span><span style="color:#BABED8;"> A</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> myMap</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> j</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> target</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">set</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">myMap</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">   return</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">j</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> myMap</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="运算符技巧" tabindex="-1">运算符技巧 <a class="header-anchor" href="#运算符技巧" aria-label="Permalink to &quot;运算符技巧&quot;">​</a></h2><h3 id="交换两个数" tabindex="-1">交换两个数 <a class="header-anchor" href="#交换两个数" aria-label="Permalink to &quot;交换两个数&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 常规</span></span>
<span class="line"><span style="color:#BABED8;">int tmp </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> y</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> tmp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 位运算</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">^</span><span style="color:#BABED8;"> y   </span><span style="color:#676E95;font-style:italic;">// （1）</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">^</span><span style="color:#BABED8;"> y   </span><span style="color:#676E95;font-style:italic;">// （2）</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">^</span><span style="color:#BABED8;"> y   </span><span style="color:#676E95;font-style:italic;">// （3）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="判断奇偶数" tabindex="-1">判断奇偶数 <a class="header-anchor" href="#判断奇偶数" aria-label="Permalink to &quot;判断奇偶数&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 普通判断</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;">(n </span><span style="color:#89DDFF;">%</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;"> ==</span><span style="color:#F78C6C;"> 1</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> // n 是个奇数。</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 位运算</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;">(n </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;"> ==</span><span style="color:#F78C6C;"> 1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // n 是个奇数。</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="异或" tabindex="-1">^= 异或 <a class="header-anchor" href="#异或" aria-label="Permalink to &quot;^= 异或&quot;">​</a></h3><p>二进制对比，在两次对比以后会是原来的值</p><p>4 ^= 5</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#F78C6C;">100</span><span style="color:#676E95;font-style:italic;"> //4</span></span>
<span class="line"><span style="color:#F78C6C;">101</span><span style="color:#676E95;font-style:italic;"> //5</span></span>
<span class="line"><span style="color:#F78C6C;">001</span><span style="color:#676E95;font-style:italic;"> //异或后得到</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="示例-只出现一次的数字" tabindex="-1">示例：<a href="https://leetcode-cn.com/problems/single-number/" target="_blank" rel="noreferrer">只出现一次的数字</a> <a class="header-anchor" href="#示例-只出现一次的数字" aria-label="Permalink to &quot;示例：[只出现一次的数字](https://leetcode-cn.com/problems/single-number/)&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> ans </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;"> for</span><span style="color:#BABED8;"> (</span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> num </span><span style="color:#89DDFF;">of</span><span style="color:#BABED8;"> nums) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#BABED8;">  ans</span><span style="color:#89DDFF;"> ^=</span><span style="color:#BABED8;"> num</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;"> return</span><span style="color:#BABED8;"> ans</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="移位-和" tabindex="-1">移位&gt;&gt;和&gt;&gt;&gt; <a class="header-anchor" href="#移位-和" aria-label="Permalink to &quot;移位&gt;&gt;和&gt;&gt;&gt;&quot;">​</a></h3><p><code>&gt;&gt;&gt;</code> 是无符号的 <code>&gt;&gt;</code> 是有符号的</p><h4 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h4><p>通过寻找二分的中间点</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> mid </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> (start </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> end) </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#F78C6C;"> 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="数组中的位置交换" tabindex="-1">数组中的位置交换 <a class="header-anchor" href="#数组中的位置交换" aria-label="Permalink to &quot;数组中的位置交换&quot;">​</a></h2><p>i，j两个位置的交换</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> swap</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">i</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> j</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> arr</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;"> ==</span><span style="color:#BABED8;"> j</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#BABED8;">  arr</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arr</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> arr</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">j</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#BABED8;">  arr</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">j</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arr</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> arr</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">j</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#BABED8;">  arr</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arr</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> arr</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">j</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,55),t=[o];function r(c,i,y,D,F,b){return n(),a("div",null,t)}const d=s(e,[["render",r]]);export{u as __pageData,d as default};
