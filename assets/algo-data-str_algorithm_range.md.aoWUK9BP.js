import{_ as s,c as n,o as a,U as l}from"./chunks/framework.BgVg8wer.js";const m=JSON.parse('{"title":"区间","description":"","frontmatter":{},"headers":[],"relativePath":"algo-data-str/algorithm/range.md","filePath":"algo-data-str/algorithm/range.md","lastUpdated":1719664933000}'),p={name:"algo-data-str/algorithm/range.md"},o=l(`<h1 id="区间" tabindex="-1">区间 <a class="header-anchor" href="#区间" aria-label="Permalink to &quot;区间&quot;">​</a></h1><h2 id="汇总区间" tabindex="-1"><a href="https://leetcode.cn/problems/summary-ranges/description/" target="_blank" rel="noreferrer">汇总区间</a> <a class="header-anchor" href="#汇总区间" aria-label="Permalink to &quot;[汇总区间](https://leetcode.cn/problems/summary-ranges/description/)&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> summaryRanges </span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">nums</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> nums</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> n</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> low</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    i</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#BABED8;"> nums</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">===</span><span style="color:#BABED8;"> nums</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;"> 1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      i</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> high</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> temp</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> \`\${</span><span style="color:#BABED8;">nums[low]</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">low</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> high</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      temp</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> \`\${</span><span style="color:#BABED8;">nums[low]</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">-&gt;</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">nums[high]</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#BABED8;">    res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">temp</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,3),e=[o];function r(t,c,D,y,F,i){return a(),n("div",null,e)}const b=s(p,[["render",r]]);export{m as __pageData,b as default};
