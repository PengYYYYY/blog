import{_ as s,c as a,o as n,U as l}from"./chunks/framework.B9byA8Cw.js";const d=JSON.parse('{"title":"分治","description":"","frontmatter":{},"headers":[],"relativePath":"algo-data-str/algorithm/separateGovernment.md","filePath":"algo-data-str/algorithm/separateGovernment.md","lastUpdated":1710339266000}'),o={name:"algo-data-str/algorithm/separateGovernment.md"},p=l(`<h1 id="分治" tabindex="-1">分治 <a class="header-anchor" href="#分治" aria-label="Permalink to &quot;分治&quot;">​</a></h1><h2 id="pow-x-n" tabindex="-1"><a href="https://leetcode.cn/problems/powx-n/description/" target="_blank" rel="noreferrer">Pow(x, n)</a> <a class="header-anchor" href="#pow-x-n" aria-label="Permalink to &quot;[Pow(x, n)](https://leetcode.cn/problems/powx-n/description/)&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> myPow </span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> n</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;"> ==</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;"> ||</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> ==</span><span style="color:#F78C6C;"> 1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> ==</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;"> ?</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;"> :</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#82AAFF;"> myPow</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;"> /</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">abs</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> %</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;"> ===</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;"> ?</span><span style="color:#82AAFF;"> myPow</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;"> *</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> /</span><span style="color:#F78C6C;"> 2</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> myPow</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;"> *</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;"> /</span><span style="color:#F78C6C;"> 2</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,3),e=[p];function t(r,c,F,D,y,i){return n(),a("div",null,e)}const m=s(o,[["render",t]]);export{d as __pageData,m as default};
