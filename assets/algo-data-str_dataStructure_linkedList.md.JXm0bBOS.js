import{_ as s,c as n,o as a,U as l}from"./chunks/framework.B3hHBZKV.js";const p="/blog/assets/D81eMw.CcW_hxzo.png",A=JSON.parse('{"title":"链表","description":"","frontmatter":{},"headers":[],"relativePath":"algo-data-str/dataStructure/linkedList.md","filePath":"algo-data-str/dataStructure/linkedList.md","lastUpdated":1708530745000}'),o={name:"algo-data-str/dataStructure/linkedList.md"},e=l(`<h1 id="链表" tabindex="-1">链表 <a class="header-anchor" href="#链表" aria-label="Permalink to &quot;链表&quot;">​</a></h1><p>基础数据结构</p><h2 id="链表遍历框架" tabindex="-1">链表遍历框架 <a class="header-anchor" href="#链表遍历框架" aria-label="Permalink to &quot;链表遍历框架&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> ListNode</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  constructor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> value</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 循环</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> traverse </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">head</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> ListNode</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> head</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">cur</span><span style="color:#89DDFF;"> !=</span><span style="color:#89DDFF;"> null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    cur</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 递归</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> recursive </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">head</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> ListNode</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  recursive</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="反转链表" tabindex="-1"><a href="https://leetcode-cn.com/problems/reverse-linked-list/" target="_blank" rel="noreferrer">反转链表</a> <a class="header-anchor" href="#反转链表" aria-label="Permalink to &quot;[反转链表](&lt;https://leetcode-cn.com/problems/reverse-linked-list/&gt;)&quot;">​</a></h2><h3 id="递归实现" tabindex="-1">递归实现 <a class="header-anchor" href="#递归实现" aria-label="Permalink to &quot;递归实现&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> reversLinkedList </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">head</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">head</span><span style="color:#89DDFF;"> ==</span><span style="color:#89DDFF;"> null</span><span style="color:#89DDFF;"> ||</span><span style="color:#BABED8;"> head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> ==</span><span style="color:#89DDFF;"> null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> head</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> newHead</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> reversLinkedList</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">  head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> head</span></span>
<span class="line"><span style="color:#BABED8;">  head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> newHead</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="迭代实现" tabindex="-1">迭代实现 <a class="header-anchor" href="#迭代实现" aria-label="Permalink to &quot;迭代实现&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> reversLinkedList </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">head</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> prev</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> head</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">cur</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> next</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#BABED8;">    cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> prev</span></span>
<span class="line"><span style="color:#BABED8;">    prev</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> cur</span></span>
<span class="line"><span style="color:#BABED8;">    cur</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> next</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> cur</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="合并两个有序链表" tabindex="-1"><a href="https://leetcode-cn.com/problems/he-bing-liang-ge-pai-xu-de-lian-biao-lcof/" target="_blank" rel="noreferrer">合并两个有序链表</a> <a class="header-anchor" href="#合并两个有序链表" aria-label="Permalink to &quot;[合并两个有序链表](https://leetcode-cn.com/problems/he-bing-liang-ge-pai-xu-de-lian-biao-lcof/)&quot;">​</a></h2><h3 id="递归" tabindex="-1">递归 <a class="header-anchor" href="#递归" aria-label="Permalink to &quot;递归&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> mergeTwoLists </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">l1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> l2</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">l1</span><span style="color:#89DDFF;"> ==</span><span style="color:#89DDFF;"> null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> l2</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">l2</span><span style="color:#89DDFF;"> ==</span><span style="color:#89DDFF;"> null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> l1</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">l1</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> l2</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    l1</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> mergeList</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">l1</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> l2</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> l1</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    l2</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> mergeList</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">l1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> l2</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> l2</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="迭代" tabindex="-1">迭代 <a class="header-anchor" href="#迭代" aria-label="Permalink to &quot;迭代&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> mergeTwoLists </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">l1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> l2</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> preHead</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> ListNode</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> prev</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> preHead</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">l1</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#BABED8;"> l2</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">l1</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#89DDFF;"> &lt;=</span><span style="color:#BABED8;"> l2</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      prev</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> l1</span></span>
<span class="line"><span style="color:#BABED8;">      l1</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> l1</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">      prev</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> l2</span></span>
<span class="line"><span style="color:#BABED8;">      l2</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> l2</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#BABED8;">    prev</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> prev</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#BABED8;">  prev</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> l1</span><span style="color:#89DDFF;"> ===</span><span style="color:#89DDFF;"> null</span><span style="color:#89DDFF;"> ?</span><span style="color:#BABED8;"> l2</span><span style="color:#89DDFF;"> :</span><span style="color:#BABED8;"> l1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> preHead</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="回文链表" tabindex="-1"><a href="https://leetcode-cn.com/problems/palindrome-linked-list/" target="_blank" rel="noreferrer">回文链表</a> <a class="header-anchor" href="#回文链表" aria-label="Permalink to &quot;[回文链表](https://leetcode-cn.com/problems/palindrome-linked-list/)&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> isPalindrome </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">head</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">head</span><span style="color:#89DDFF;"> ==</span><span style="color:#89DDFF;"> null</span><span style="color:#89DDFF;"> ||</span><span style="color:#BABED8;"> head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> ==</span><span style="color:#89DDFF;"> null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> fast</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> head</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> slow</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> head</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> prev</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">fast</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#BABED8;"> fast</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    pre</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> slow</span></span>
<span class="line"><span style="color:#BABED8;">    slow</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> slow</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#BABED8;">    fast</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> fast</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#BABED8;">  prev</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> null</span><span style="color:#676E95;font-style:italic;"> //断开</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> prev2</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> null;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">slow</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> next</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> slow</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    slow</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> prev2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    prev2</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> slow</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    slow</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">head</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#BABED8;"> prev2</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#89DDFF;"> !==</span><span style="color:#BABED8;"> prev</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#BABED8;">    head</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#BABED8;">    prev2</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> prev2</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">  }!</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="环形链表" tabindex="-1"><a href="https://leetcode-cn.com/problems/linked-list-cycle/" target="_blank" rel="noreferrer">环形链表</a> <a class="header-anchor" href="#环形链表" aria-label="Permalink to &quot;[环形链表](https://leetcode-cn.com/problems/linked-list-cycle/)&quot;">​</a></h2><ul><li>标记法</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> hasCycle </span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">head</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">head</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">flag</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"><span style="color:#BABED8;">    head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">flag</span><span style="color:#89DDFF;"> =</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"><span style="color:#BABED8;">    head</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>快慢指针法</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> hasCycle </span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">head</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">head</span><span style="color:#89DDFF;"> ||</span><span style="color:#89DDFF;"> !</span><span style="color:#BABED8;">head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> fast</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> slow</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> head</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">fast</span><span style="color:#89DDFF;"> !==</span><span style="color:#BABED8;"> slow</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">fast</span><span style="color:#89DDFF;"> ||</span><span style="color:#89DDFF;"> !</span><span style="color:#BABED8;">fast</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#BABED8;">    fast</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> fast</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#BABED8;">    slow</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> slow</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="环形链表2" tabindex="-1"><a href="https://leetcode-cn.com/problems/linked-list-cycle-ii/submissions/" target="_blank" rel="noreferrer">环形链表2</a> <a class="header-anchor" href="#环形链表2" aria-label="Permalink to &quot;[环形链表2](https://leetcode-cn.com/problems/linked-list-cycle-ii/submissions/)&quot;">​</a></h2><p><img src="`+p+`" alt="img"></p><p>以相遇点为基准</p><ul><li>快指针走过的距离：a + (b+c) * n + b</li><li>慢指针走过的距离是：a + b</li></ul><p>a + (b + c) * n + b = 2 （a + b） a = c + (n - 1)(b + c)</p><p>所以a = c</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> detectCycle </span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">head</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">head</span><span style="color:#89DDFF;"> ===</span><span style="color:#89DDFF;"> null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> null;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> slow</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> head</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> fast</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">fast</span><span style="color:#89DDFF;"> !==</span><span style="color:#89DDFF;"> null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    slow</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> slow</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">fast</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> !==</span><span style="color:#89DDFF;"> null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      fast</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> fast</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      return</span><span style="color:#89DDFF;"> null;</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">slow</span><span style="color:#89DDFF;"> ==</span><span style="color:#BABED8;"> fast</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">      let</span><span style="color:#BABED8;"> pre</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> head</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">pre</span><span style="color:#89DDFF;"> !==</span><span style="color:#BABED8;"> slow</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        slow</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> slow</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#BABED8;">        pre</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> pre</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      return</span><span style="color:#BABED8;"> pre</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#89DDFF;"> null;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="相交链表" tabindex="-1"><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/" target="_blank" rel="noreferrer">相交链表</a> <a class="header-anchor" href="#相交链表" aria-label="Permalink to &quot;[相交链表](https://leetcode-cn.com/problems/intersection-of-two-linked-lists/)&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> getIntersectionNode </span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">headA</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> headB</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">headA</span><span style="color:#89DDFF;"> ||</span><span style="color:#89DDFF;"> !</span><span style="color:#BABED8;">headB</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> pA</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> headA</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> pB</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> headB</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">PA</span><span style="color:#89DDFF;"> !==</span><span style="color:#BABED8;"> pB</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    pA</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> pA</span><span style="color:#89DDFF;"> ===</span><span style="color:#89DDFF;"> null</span><span style="color:#89DDFF;"> ?</span><span style="color:#BABED8;"> headB</span><span style="color:#89DDFF;"> :</span><span style="color:#BABED8;"> pA</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    PB</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> PB</span><span style="color:#89DDFF;"> ===</span><span style="color:#89DDFF;"> null</span><span style="color:#89DDFF;"> ?</span><span style="color:#BABED8;"> headA</span><span style="color:#89DDFF;"> :</span><span style="color:#BABED8;"> PB</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> pA</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="构造链表" tabindex="-1"><a href="https://leetcode-cn.com/problems/design-linked-list/" target="_blank" rel="noreferrer">构造链表</a> <a class="header-anchor" href="#构造链表" aria-label="Permalink to &quot;[构造链表](https://leetcode-cn.com/problems/design-linked-list/)&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> myLinkedList</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">  constructor</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {}</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#F07178;">  get</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">index</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">index</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">data</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> index</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#BABED8;">      cur</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#89DDFF;"> ==</span><span style="color:#89DDFF;"> undefined</span><span style="color:#89DDFF;"> ||</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#89DDFF;"> ==</span><span style="color:#89DDFF;"> null</span><span style="color:#89DDFF;"> ?</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;"> :</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#F07178;">  addHead</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">val</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#89DDFF;"> !</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#89DDFF;"> ===</span><span style="color:#89DDFF;"> undefined</span><span style="color:#89DDFF;"> ||</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#89DDFF;"> ==</span><span style="color:#89DDFF;"> null</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">        val</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        next</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">data</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">      this.</span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">        val</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        next</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#F07178;">  addAtTail</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">val</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">data</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    while</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      crr</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#BABED8;">    cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> val</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> next</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> null</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#F07178;">  addAtIndex</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">index</span><span style="color:#89DDFF;"> &lt;=</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;"> this.</span><span style="color:#82AAFF;">addAtHead</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">data</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> index</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">cur</span><span style="color:#89DDFF;"> ||</span><span style="color:#89DDFF;"> !</span><span style="color:#BABED8;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#BABED8;">      cur</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#89DDFF;"> !==</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#BABED8;">    cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> val</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> next</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"><span style="color:#F07178;">  deleteAtIndex</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">index</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">index</span><span style="color:#89DDFF;"> ===</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">data</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> index</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> ||</span><span style="color:#89DDFF;"> !</span><span style="color:#BABED8;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#BABED8;">      cur</span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#BABED8;">    cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><h3 id="合并k个排序链表" tabindex="-1"><a href="https://leetcode-cn.com/problems/merge-k-sorted-lists/description/" target="_blank" rel="noreferrer">合并K个排序链表</a> <a class="header-anchor" href="#合并k个排序链表" aria-label="Permalink to &quot;[合并K个排序链表](https://leetcode-cn.com/problems/merge-k-sorted-lists/description/)&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> mergeKLists </span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">lists</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">lists</span><span style="color:#89DDFF;"> ||</span><span style="color:#BABED8;"> lists</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;"> ==</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;"> null;</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> ListNode</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    lists</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#BABED8;font-style:italic;">list</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">        let</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> list</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">cur</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">            arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">            cur</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 快排</span></span>
<span class="line"><span style="color:#BABED8;">    arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sort</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;">b</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> a</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">b</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#BABED8;font-style:italic;">val</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">        let</span><span style="color:#BABED8;"> node</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> ListNode</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">        cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> node</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">        cur</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,34),r=[e];function t(c,D,F,y,i,B){return a(),n("div",null,r)}const u=s(o,[["render",t]]);export{A as __pageData,u as default};
