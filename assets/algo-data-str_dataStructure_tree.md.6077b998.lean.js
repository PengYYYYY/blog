import{_ as s,o as n,c as a,a as l}from"./app.b587663e.js";const C=JSON.parse('{"title":"树","description":"","frontmatter":{},"headers":[{"level":2,"title":"二叉树架子","slug":"二叉树架子","link":"#二叉树架子","children":[]},{"level":2,"title":"层序遍历","slug":"层序遍历","link":"#层序遍历","children":[]},{"level":2,"title":"深度遍历","slug":"深度遍历","link":"#深度遍历","children":[{"level":3,"title":"递归遍历","slug":"递归遍历","link":"#递归遍历","children":[]},{"level":3,"title":"迭代前序遍历","slug":"迭代前序遍历","link":"#迭代前序遍历","children":[]},{"level":3,"title":"迭代中序遍历","slug":"迭代中序遍历","link":"#迭代中序遍历","children":[]},{"level":3,"title":"迭代后序遍历","slug":"迭代后序遍历","link":"#迭代后序遍历","children":[]}]},{"level":2,"title":"N叉树遍历","slug":"n叉树遍历","link":"#n叉树遍历","children":[]},{"level":2,"title":"树的深度","slug":"树的深度","link":"#树的深度","children":[{"level":3,"title":"树的最大深度","slug":"树的最大深度","link":"#树的最大深度","children":[]},{"level":3,"title":"树的最小深度","slug":"树的最小深度","link":"#树的最小深度","children":[]},{"level":3,"title":"路径总和","slug":"路径总和","link":"#路径总和","children":[]}]},{"level":2,"title":"树的对比","slug":"树的对比","link":"#树的对比","children":[{"level":3,"title":"对称二叉树","slug":"对称二叉树","link":"#对称二叉树","children":[]}]},{"level":2,"title":"重建二叉树","slug":"重建二叉树","link":"#重建二叉树","children":[{"level":3,"title":"从中序与后序遍历序列构造二叉树","slug":"从中序与后序遍历序列构造二叉树","link":"#从中序与后序遍历序列构造二叉树","children":[]},{"level":3,"title":"从前序与中序遍历序列构造二叉树","slug":"从前序与中序遍历序列构造二叉树","link":"#从前序与中序遍历序列构造二叉树","children":[]}]},{"level":2,"title":"前缀树","slug":"前缀树","link":"#前缀树","children":[{"level":3,"title":"实现 Trie (前缀树)","slug":"实现-trie-前缀树","link":"#实现-trie-前缀树","children":[]}]},{"level":2,"title":"递增顺序搜索树","slug":"递增顺序搜索树","link":"#递增顺序搜索树","children":[]}],"relativePath":"algo-data-str/dataStructure/tree.md","lastUpdated":1692803528000}'),p={name:"algo-data-str/dataStructure/tree.md"},o=l("",42),e=[o];function r(t,c,y,F,D,i){return n(),a("div",null,e)}const b=s(p,[["render",r]]);export{C as __pageData,b as default};
