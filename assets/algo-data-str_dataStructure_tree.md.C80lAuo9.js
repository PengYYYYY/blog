import{_ as n,c as a,R as l,o as p}from"./chunks/framework.B7niMGvM.js";const i=JSON.parse('{"title":"树","description":"","frontmatter":{},"headers":[],"relativePath":"algo-data-str/dataStructure/tree.md","filePath":"algo-data-str/dataStructure/tree.md","lastUpdated":1735488038000}'),o={name:"algo-data-str/dataStructure/tree.md"};function e(r,s,c,t,y,F){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="树" tabindex="-1">树 <a class="header-anchor" href="#树" aria-label="Permalink to &quot;树&quot;">​</a></h1><p>一些和树相关的内容，主要是二叉树</p><h2 id="二叉树架子" tabindex="-1">二叉树架子 <a class="header-anchor" href="#二叉树架子" aria-label="Permalink to &quot;二叉树架子&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> TreeNode</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  constructor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> left</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> right</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> value</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">left</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> left</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">right</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> right</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 循环</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> traverse </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">root</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> TreeNode</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">  traverse</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">root</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">left</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#82AAFF;">  traverse</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">root</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">right</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="层序遍历" tabindex="-1">层序遍历 <a class="header-anchor" href="#层序遍历" aria-label="Permalink to &quot;层序遍历&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> sequence </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">root</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> q</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">root</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    q</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">root</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">q</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> currentLevelSize</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> q</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span></span>
<span class="line"><span style="color:#BABED8;">    res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">([])</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> currentLevelSize</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">      const</span><span style="color:#BABED8;"> node</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> q</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shift</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#BABED8;">      res</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">res</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">left</span><span style="color:#F07178;">) </span><span style="color:#BABED8;">q</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">left</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">right</span><span style="color:#F07178;">) </span><span style="color:#BABED8;">q</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">right</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> res</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="深度遍历" tabindex="-1">深度遍历 <a class="header-anchor" href="#深度遍历" aria-label="Permalink to &quot;深度遍历&quot;">​</a></h2><p>深度优先遍历，应用场景，diff算法</p><h3 id="递归遍历" tabindex="-1">递归遍历 <a class="header-anchor" href="#递归遍历" aria-label="Permalink to &quot;递归遍历&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> preOrderTraverse </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">root</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> preOrderTraverse</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">node</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">node</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      return</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 前序</span></span>
<span class="line"><span style="color:#BABED8;">    res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#82AAFF;">    preOrderTraverse</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">left</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#82AAFF;">    preOrderTraverse</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">right</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 中序</span></span>
<span class="line"><span style="color:#82AAFF;">    preOrderTraverse</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">left</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">    res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#82AAFF;">    preOrderTraverse</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">right</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 后序</span></span>
<span class="line"><span style="color:#82AAFF;">    preOrderTraverse</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">left</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#82AAFF;">    preOrderTraverse</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">right</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">    res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#82AAFF;">  preOrderTraverse</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">root</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> res</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="迭代前序遍历" tabindex="-1">迭代前序遍历 <a class="header-anchor" href="#迭代前序遍历" aria-label="Permalink to &quot;迭代前序遍历&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> preOrderTraverse </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">root</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> stack</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">root</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">root</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> curNode</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#F07178;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 前序</span></span>
<span class="line"><span style="color:#BABED8;">    res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">curNode</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">curNode</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">right</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">curNode</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">right</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">curNode</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">left</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">curNode</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">left</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> res</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="迭代中序遍历" tabindex="-1">迭代中序遍历 <a class="header-anchor" href="#迭代中序遍历" aria-label="Permalink to &quot;迭代中序遍历&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> inOrdeIterate </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">root</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> stack</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> node</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> root</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;"> ||</span><span style="color:#BABED8;"> stack</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">      node</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">left</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#BABED8;">    node</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#BABED8;">    res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">    node</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">right</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> res</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="迭代后序遍历" tabindex="-1">迭代后序遍历 <a class="header-anchor" href="#迭代后序遍历" aria-label="Permalink to &quot;迭代后序遍历&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> preOrderTraverse </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">root</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> stack</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">root</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">root</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> curNode</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#F07178;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 从前面插入</span></span>
<span class="line"><span style="color:#BABED8;">    res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unshift</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">curNode</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">curNode</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">left</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">curNode</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">left</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">curNode</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">right</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">curNode</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">right</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> res</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>`,16)]))}const B=n(o,[["render",e]]);export{i as __pageData,B as default};
