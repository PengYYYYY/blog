import{_ as s,o as a,c as n,a as e}from"./app.1ad5e66e.js";const h=JSON.parse('{"title":"部署工具","description":"","frontmatter":{},"headers":[{"level":2,"title":"基本流程","slug":"基本流程","link":"#基本流程","children":[{"level":3,"title":"触发器","slug":"触发器","link":"#触发器","children":[]},{"level":3,"title":"CI","slug":"ci","link":"#ci","children":[]},{"level":3,"title":"CD","slug":"cd","link":"#cd","children":[]}]},{"level":2,"title":"静态网站部署","slug":"静态网站部署","link":"#静态网站部署","children":[{"level":3,"title":"vercel","slug":"vercel","link":"#vercel","children":[]},{"level":3,"title":"githubPages","slug":"githubpages","link":"#githubpages","children":[]}]},{"level":2,"title":"serverless","slug":"serverless","link":"#serverless","children":[{"level":3,"title":"腾讯云","slug":"腾讯云","link":"#腾讯云","children":[]},{"level":3,"title":"vercel 云函数","slug":"vercel-云函数","link":"#vercel-云函数","children":[]}]},{"level":2,"title":"容器托管","slug":"容器托管","link":"#容器托管","children":[{"level":3,"title":"微信云托管","slug":"微信云托管","link":"#微信云托管","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"relativePath":"article/record/deploy.md","lastUpdated":1688570734000}'),l={name:"article/record/deploy.md"},p=e(`<h1 id="部署工具" tabindex="-1">部署工具 <a class="header-anchor" href="#部署工具" aria-hidden="true">#</a></h1><p>接触过很多部署网站的工具，总体来说分为静态网站托管和 <code>serverless</code>。</p><h2 id="基本流程" tabindex="-1">基本流程 <a class="header-anchor" href="#基本流程" aria-hidden="true">#</a></h2><p>部署工具基本包含以下三大块：触发器、CI、CD</p><h3 id="触发器" tabindex="-1">触发器 <a class="header-anchor" href="#触发器" aria-hidden="true">#</a></h3><p>触发器指的是触发部署动作，分为两大类：</p><ul><li>cli: 腾讯云 <code>TCD</code>, <code>vercel-cli</code> 这类工具实现本地命令行登陆账号，通过本地命令行出发构建部署。</li><li>webhook: 通过 <code>GitHub</code>, <code>gitlab</code> 这类平台的 <code>webhook</code> 监听到指定的分支代码推送，触发相应的构建和部署。</li></ul><h3 id="ci" tabindex="-1">CI <a class="header-anchor" href="#ci" aria-hidden="true">#</a></h3><p>持续集成过程，在 <code>ci</code> 过程中，可以实现命令行可以操作的一切东西，通常用来做代码测试，代码检查，产物包大小对比，(<code>npm</code>包、<code>docker</code>镜像、静态资源)的构建与推送等。</p><h3 id="cd" tabindex="-1">CD <a class="header-anchor" href="#cd" aria-hidden="true">#</a></h3><p>产物部署阶段需要进入生产环境中，分为以下三类：</p><ul><li>静态资源：静态资源，无法部署 <code>node</code> 服务,通常用户静态资源的CDN加速场景，适用于博客类，无法部署API。</li><li>serverless：云函数类，部署的是函数服务，使用场景受限，适合轻量的 <code>API</code> 服务</li><li>容器：微信云托管，托管容器，最为灵活，可以部署任何你想部署的东西，和企业级的部署方式类似。</li></ul><h2 id="静态网站部署" tabindex="-1">静态网站部署 <a class="header-anchor" href="#静态网站部署" aria-hidden="true">#</a></h2><h3 id="vercel" tabindex="-1">vercel <a class="header-anchor" href="#vercel" aria-hidden="true">#</a></h3><p><a href="https://vercel.com/dashboard" target="_blank" rel="noreferrer">vercel</a> 是一个前端明星团队。使用 <code>vercel</code> 部署非常简单：</p><ul><li>上 <code>vercel</code> 官网，选择对应的模版</li><li>选择对应的代码托管平台并且授权，以 <code>github</code> 为例，会自动安装 <code>vercel app</code>。</li><li>选择对应的 <code>group</code> 或个人</li><li>创建代码库，开始部署。</li></ul><p>按流程来一遍即可，非常简单</p><h3 id="githubpages" tabindex="-1">githubPages <a class="header-anchor" href="#githubpages" aria-hidden="true">#</a></h3><p><code>githubPages</code> 是 <code>github</code> 用来部署项目主页的工具，结合 <code>workflow</code>, 利用 <code>gh-pages</code> 这个 <code>action</code>， 部署起来非常快。代码如下：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">name:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-blog</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">deploy</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gh-pages</span></span>
<span class="line"><span style="color:#FFCB6B;">on:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">push:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">branches:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">master</span></span>
<span class="line"><span style="color:#82AAFF;">jobs</span><span style="color:#FFCB6B;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">build-and-deploy:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">runs-on:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ubuntu-latest</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">steps:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">🛎️</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">uses:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/checkout@v2.</span><span style="color:#F78C6C;">3.1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">🔧</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">run:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--no-frozen-lockfile</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Deploy</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">🚀</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">uses:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">JamesIves/github-pages-deploy-action@4.1.3</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">with:</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#FFCB6B;">branch:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gh-pages</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#FFCB6B;">folder:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs/.vitepress/dist</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>需要到 <code>github</code> 项目中 <code>settings</code> -&gt; <code>pages</code> 开启对应的分支。也可以解析到自己的 <code>domain</code>。默认域名为 <code>https://pengyyyyy.github.io/project-name/</code>。由于使用了 <code>base-url</code> 为项目名，构建时需要做相应的配置。</p></div><h2 id="serverless" tabindex="-1">serverless <a class="header-anchor" href="#serverless" aria-hidden="true">#</a></h2><p><code>serverless</code> 近几年发展比较快，从 <code>aws lambda</code> 开始，各家云厂商也有了对标的产品，在这一块，腾讯云函数做的挺不错的。</p><h3 id="腾讯云" tabindex="-1">腾讯云 <a class="header-anchor" href="#腾讯云" aria-hidden="true">#</a></h3><p>腾讯云在serverless 方面有两个产品，云函数和云开发，功能对比如下：</p><table><thead><tr><th>功能</th><th>云函数Serverless</th><th>云开发</th></tr></thead><tbody><tr><td>在线代码编辑</td><td>✅</td><td>❌</td></tr><tr><td>函数层管理</td><td>✅</td><td>❌</td></tr><tr><td>触发器配置</td><td>✅</td><td>✅</td></tr><tr><td>流量监控</td><td>✅</td><td>✅</td></tr><tr><td>日志监控</td><td>✅</td><td>✅</td></tr><tr><td>私有网络配置</td><td>✅</td><td>✅</td></tr><tr><td>函数服务</td><td>✅</td><td>✅</td></tr><tr><td>静态资源托管</td><td>❌</td><td>✅</td></tr><tr><td>访问服务</td><td>❌</td><td>✅</td></tr><tr><td>云托管</td><td>❌</td><td>✅</td></tr><tr><td>数据库</td><td>❌</td><td>✅</td></tr><tr><td>对象存储</td><td>❌</td><td>✅</td></tr><tr><td>用户管理</td><td>❌</td><td>✅</td></tr></tbody></table><p>可以看到，云函数Serverless在函数服务细分模块的功能要更强大一点，而云开发则应用面更广。一开始我也比较纳闷为什么会有两个同类型的产品，一对比后发现还是有很大区别的。</p><p>两个服务使用起来都很简单，就不做过多实践了，去官网试一下就可以，部署一些轻量API还是很方便的。不需要自己买服务器，价格也很便宜，也有免费额度。</p><h3 id="vercel-云函数" tabindex="-1">vercel 云函数 <a class="header-anchor" href="#vercel-云函数" aria-hidden="true">#</a></h3><p><code>vercel</code> 的云函数，适合部署轻量 <code>API</code>, 增加一个 <code>vercel.json</code> 配置文件，且安装 <code>@vercel/node</code>。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">builds</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">use</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">src</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//函数入口</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">use</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vercel/node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//使用@vercel/node</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">routes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">src</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/(.*)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">dest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//函数录路由</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="部署与调试" tabindex="-1">部署与调试 <a class="header-anchor" href="#部署与调试" aria-hidden="true">#</a></h4><p>使用 <code>vercel-cli</code> 进行部署即可。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 正式环境</span></span>
<span class="line"><span style="color:#FFCB6B;">vercel</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 开发环境</span></span>
<span class="line"><span style="color:#FFCB6B;">vercel</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>具体可参考 <a href="https://github.com/pengYYYYY/figma-api-live/blob/master/server" target="_blank" rel="noreferrer">figma-api-live</a></p><h2 id="容器托管" tabindex="-1">容器托管 <a class="header-anchor" href="#容器托管" aria-hidden="true">#</a></h2><p>容器技术近些年来发展迅猛，成为了主流的运维环境，大家熟知的 <code>docker</code>, <code>k8s</code>等等，基本上公司里面的部署也是通过这一套流程来做的。在面向个人用户云托管可以成为一个很好的选择。</p><h3 id="微信云托管" tabindex="-1">微信云托管 <a class="header-anchor" href="#微信云托管" aria-hidden="true">#</a></h3><p>2021年的时候，使用过腾讯云托管容器使用过，但是各方面都不成熟，除了demo其他的项目就没部署成功过。最近上腾讯云开发的时候发现整体迁移到了微信云托管上面了，于是尝试使用。让人非常惊喜，除了公网服务只能用于测试（很痛）以外 ，其他的服务完美。期待后面能够开放公网服务。</p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloudrun/src/basic/intro.html" target="_blank" rel="noreferrer">开发文档</a></p><h4 id="容器服务" tabindex="-1">容器服务 <a class="header-anchor" href="#容器服务" aria-hidden="true">#</a></h4><p>部署容器服务非常简单，细节可以看开发文档，在github也有代码示例，主要是以下步骤，</p><ul><li>创建项目：项目名，<code>github</code> 仓库，触发器，服务监听端口</li><li>项目编写 <code>dockerfile</code>，根据项目不同，写好对应逻辑，暴露API对应端口</li><li>推送代码，触发 CI 流程</li><li>CI 执行 <code>dockerfile</code> 构建镜像</li><li>CD 应用镜像，启动容器，开启服务</li></ul><h4 id="数据库服务" tabindex="-1">数据库服务 <a class="header-anchor" href="#数据库服务" aria-hidden="true">#</a></h4><p>微信云托管还提供了 <code>mysql</code> 数据库服务，这是非常让人意外的，之前使用的微信云开发都是 <code>noSql</code> 的服务。并且这个 <code>mysql</code> 和 <code>TDSql</code> 的服务一模一样。我买的云数据库一个月也得将近 <code>50</code>。</p><h4 id="对象存储" tabindex="-1">对象存储 <a class="header-anchor" href="#对象存储" aria-hidden="true">#</a></h4><p>对象存储就和腾讯云开发的基本一样了。就是简化版的 <code>cos</code>。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><p>当前处于云原生时代，对前端开发人员也越来越友好，各种部署工具层出不穷，我们只需要专注于自己的核心能力即可，能够被标准化的产业肯定会被标准化的，云函数也好，云托管也好，本质上就是让开发者能够更快更简单的去上线自己的创意，自己的项目。并且收费方面也非常人性化，适合个人和创业公司使用。</p>`,49),o=[p];function r(c,t,d,i,C,y){return a(),n("div",null,o)}const u=s(l,[["render",r]]);export{h as __pageData,u as default};
