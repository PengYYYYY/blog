import{_ as s,c as a,o as e,U as l}from"./chunks/framework.-vLQ8d8w.js";const m=JSON.parse('{"title":"vue-loader 是怎么运行的","description":"","frontmatter":{},"headers":[],"relativePath":"article/record/vue-loader.md","filePath":"article/record/vue-loader.md","lastUpdated":1706116744000}'),n={name:"article/record/vue-loader.md"},p=l(`<h1 id="vue-loader-是怎么运行的" tabindex="-1">vue-loader 是怎么运行的 <a class="header-anchor" href="#vue-loader-是怎么运行的" aria-label="Permalink to &quot;vue-loader 是怎么运行的&quot;">​</a></h1><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><p>vue-loader 提供给 webpack 使用。主要提供以下的几点特性</p><ul><li>允许对 vue 组件的每个部分使用其他webpack加载器，例如，对于 <code>&lt;style&gt;</code> 是Sass预处理器，对于 <code>&lt;template&gt;</code> 可以是 Pug 模版引擎</li><li>允许 .vue 文件中定制区块，这些定制块可以应用定制的加载程序链</li></ul><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#89DDFF;font-style:italic;"> default</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li>将 <code>&lt;style&gt;</code> 和 <code>&lt;template&gt;</code> 中引用的静态资产视为模块依赖项，并使用 webpack 加载器处理它们；</li><li>模拟每个组件的作用域 CSS；</li><li>在开发过程中保持状态的热重载。<code>vue-loader</code>与<code>webpack</code>的结合提供了强大的工作流</li></ul><h2 id="如何工作" tabindex="-1">如何工作 <a class="header-anchor" href="#如何工作" aria-label="Permalink to &quot;如何工作&quot;">​</a></h2><p>接下来看看他是如何工作的</p><h3 id="第一步" tabindex="-1">第一步 <a class="header-anchor" href="#第一步" aria-label="Permalink to &quot;第一步&quot;">​</a></h3><p>使用 <code>@vue/component-compiler-utils</code> 将 SFC 源代码解析为 SFC 描述符，然后，它为每种语言块生成一个导入，因此实际返回的模块代码如下所示</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// code returned from the main loader for &#39;source.vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// import the &lt;template&gt; block</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> render </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">source.vue?vue&amp;type=template</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// import the &lt;script&gt; block</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> script </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">source.vue?vue&amp;type=script</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#89DDFF;"> *</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">source.vue?vue&amp;type=script</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// import &lt;style&gt; blocks</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">source.vue?vue&amp;type=style&amp;index=1</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">script</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">render </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> render</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#89DDFF;font-style:italic;"> default</span><span style="color:#BABED8;"> script</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>代码都是从source.vue中导入的，但是域不同。</p><h3 id="第二步-针对不同语言" tabindex="-1">第二步，针对不同语言 <a class="header-anchor" href="#第二步-针对不同语言" aria-label="Permalink to &quot;第二步，针对不同语言&quot;">​</a></h3><p>如果我们想指定对应区块内的语言，比如 <code>&lt;script lang=&quot;ts&quot;&gt;</code>, 这时候 VueLoaderPlugin 派上用场，对于 webpack 配置中的每个模块规则，它都会创建一个针对相应 Vue 语言块请求的修改后的克隆。</p><p>假设已经为所有 * .js 文件配置了 babel-loader。该规则将被克隆并应用于 Vue SFC <code>&lt;script&gt;</code> 块。在 webpack 内部，类似于下面的请求</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> script </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">source.vue?vue&amp;type=script</span><span style="color:#89DDFF;">&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>将被转换为</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> script </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">babel-loader!vue-loader!source.vue?vue&amp;type=script</span><span style="color:#89DDFF;">&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果你为为 * .scss 文件配置了 style-loader + css-loader + sass-loader。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#C792EA;"> scoped</span><span style="color:#C792EA;"> lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scss</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>vue-loader</code> 将其转换为</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">source.vue?vue&amp;type=style&amp;index=1&amp;scoped&amp;lang=scss</span><span style="color:#89DDFF;">&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>webpack</code> 将其转换为</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">style-loader!css-loader!sass-loader!vue-loader!source.vue?vue&amp;type=style&amp;index=1&amp;scoped&amp;lang=scss</span><span style="color:#89DDFF;">&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="第三步" tabindex="-1">第三步 <a class="header-anchor" href="#第三步" aria-label="Permalink to &quot;第三步&quot;">​</a></h3><p>处理扩展的请求时， <code>vue-loader</code> 会被再次调用，这次 <code>webpack</code> 加载程序会注意到请求具有查询并且仅针对特定的块，选择目标块的内部内容，并将其传递给匹配的目标装载程序。</p><h3 id="第四步-转换" tabindex="-1">第四步，转换 <a class="header-anchor" href="#第四步-转换" aria-label="Permalink to &quot;第四步，转换&quot;">​</a></h3><p>对于 <code>&lt;script</code>&gt; 块，转换基本结束，对于 <code>&lt;template&gt;</code> 和 <code>&lt;style&gt;</code> 块来说，还有一些额外的任务需要执行。</p><ul><li><p>需要使用 Vue 模板编译器来编译模板</p></li><li><p>需要在 <code>css-loader</code> 执行前, 对 <code>&lt;style scoped&gt;</code> 块进行处理</p></li></ul><p>从技术上讲，这些是额外的装载机（templateLoader，stylePostLoader），需要注入扩展的加载程序链中，如果最终用户必须自己配置，那将非常复杂，所以 <code>VueLoaderPlugin</code>也注入了全局的加载器来拦截<code>&lt;template&gt;</code>和 <code>&lt;style&gt;</code> 的块请求，并注入必要的装载机最终请求如下所示。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// &lt;template lang=&quot;pug&quot;&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">vue-loader/template-loader!pug-loader!vue-loader!source.vue?vue&amp;type=template</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &lt;style scoped lang=&quot;scss&quot;&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">style-loader!css-loader!vue-loader/style-post-loader!sass-loader!vue-loader!source.vue?vue&amp;type=style&amp;index=1&amp;scoped&amp;lang=scss</span><span style="color:#89DDFF;">&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,31),o=[p];function t(c,r,i,d,u,y){return e(),a("div",null,o)}const F=s(n,[["render",t]]);export{m as __pageData,F as default};
