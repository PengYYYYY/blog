import{_ as s,c as n,o as a,a as l}from"./app.d2afdd46.js";const p='{"title":"nginx","description":"","frontmatter":{},"headers":[{"level":2,"title":"安装","slug":"安装"},{"level":3,"title":"下载nginx源码","slug":"下载nginx源码"},{"level":3,"title":"安装操作","slug":"安装操作"},{"level":3,"title":"环境变量","slug":"环境变量"},{"level":2,"title":"常用配置","slug":"常用配置"},{"level":3,"title":"项目配置(http)","slug":"项目配置-http"},{"level":3,"title":"项目配置(https)","slug":"项目配置-https"},{"level":3,"title":"api服务https配置","slug":"api服务https配置"},{"level":3,"title":"history路由配置","slug":"history路由配置"},{"level":3,"title":"静态文件校验","slug":"静态文件校验"},{"level":2,"title":"certbot安装https","slug":"certbot安装https"},{"level":2,"title":"Nginx 优势","slug":"nginx-优势"},{"level":2,"title":"Nginx 主要应用场景","slug":"nginx-主要应用场景"},{"level":2,"title":"正向代理 Forward proxy","slug":"正向代理-forward-proxy"},{"level":2,"title":"反向代理 Reverse proxy","slug":"反向代理-reverse-proxy"},{"level":2,"title":"Gzip","slug":"gzip"},{"level":2,"title":"请求限制","slug":"请求限制"},{"level":2,"title":"访问控制","slug":"访问控制"},{"level":2,"title":"防盗链","slug":"防盗链"},{"level":2,"title":"负载均衡 Load Balance","slug":"负载均衡-load-balance"},{"level":3,"title":"后端服务器状态","slug":"后端服务器状态"},{"level":3,"title":"分配方式","slug":"分配方式"}],"relativePath":"backend/devops/nginx.md"}',e={},o=[l('<h1 id="nginx" tabindex="-1">nginx <a class="header-anchor" href="#nginx" aria-hidden="true">#</a></h1><p>CPU 朝着多核方向发展，之前的霸主 Apache 一个进程同一时间只能处理一个连接，处理完一个请求后才能处理下一个，这无疑不能应对如今互联网上海量的用户。况且进程间切换的成本是非常高的。在这种背景下，Nginx 应运而生，可以轻松处理数百万、上千万的连接。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-hidden="true">#</a></h2><div class="language-bash"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">#gcc安装，nginx源码编译需要</span></span>\n<span class="line"><span style="color:#A6ACCD;">yum install gcc-c++</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#PCRE pcre-devel 安装，nginx 的 http 模块使用 pcre 来解析正则表达式</span></span>\n<span class="line"><span style="color:#A6ACCD;">yum install -y pcre pcre-devel</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#zlib安装，nginx 使用zlib对http包的内容进行gzip</span></span>\n<span class="line"><span style="color:#A6ACCD;">yum install -y zlib zlib-devel</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#OpenSSL 安装，强大的安全套接字层密码库，nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http）</span></span>\n<span class="line"><span style="color:#A6ACCD;">yum install -y openssl openssl-devel</span></span>\n<span class="line"></span></code></pre></div><h3 id="下载nginx源码" tabindex="-1">下载nginx源码 <a class="header-anchor" href="#下载nginx源码" aria-hidden="true">#</a></h3><div class="language-bash"><pre><code><span class="line"><span style="color:#A6ACCD;">wget -c https://nginx.org/download/nginx-1.16.1.tar.gz //找到自己需要的版本</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="安装操作" tabindex="-1">安装操作 <a class="header-anchor" href="#安装操作" aria-hidden="true">#</a></h3><div class="language-bash"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">#根目录使用ls命令可以看到下载的nginx压缩包，然后解压</span></span>\n<span class="line"><span style="color:#A6ACCD;">tar -zxvf nginx-1.16.1.tar.gz</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#解压后进入目录</span></span>\n<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> nginx-1.16.1</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#使用默认配置</span></span>\n<span class="line"><span style="color:#A6ACCD;">./configure</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># https模块安装</span></span>\n<span class="line"><span style="color:#A6ACCD;">./configure --with-http_stub_status_module --with-http_ssl_module</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#编译安装</span></span>\n<span class="line"><span style="color:#A6ACCD;">make</span></span>\n<span class="line"><span style="color:#A6ACCD;">make install</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#查找安装路径，默认都是这个路径</span></span>\n<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">root@VM_0_12_centos </span><span style="color:#89DDFF;">~]</span><span style="color:#676E95;font-style:italic;"># whereis nginx</span></span>\n<span class="line"><span style="color:#A6ACCD;">nginx: /usr/local/nginx</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#启动、停止nginx</span></span>\n<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> /usr/local/nginx/sbin/</span></span>\n<span class="line"><span style="color:#A6ACCD;">./nginx     </span><span style="color:#676E95;font-style:italic;">#启动</span></span>\n<span class="line"><span style="color:#A6ACCD;">./nginx -s stop  </span><span style="color:#676E95;font-style:italic;">#停止，直接查找nginx进程id再使用kill命令强制杀掉进程</span></span>\n<span class="line"><span style="color:#A6ACCD;">./nginx -s quit  </span><span style="color:#676E95;font-style:italic;">#退出停止，等待nginx进程处理完任务再进行停止</span></span>\n<span class="line"><span style="color:#A6ACCD;">./nginx -s reload  </span><span style="color:#676E95;font-style:italic;">#重新加载配置文件，修改nginx.conf后使用该命令，新配置即可生效</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#重启nginx，建议先停止，再启动</span></span>\n<span class="line"><span style="color:#A6ACCD;">./nginx -s stop</span></span>\n<span class="line"><span style="color:#A6ACCD;">./nginx</span></span>\n<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">#查看nginx进程，如下返回，即为成功</span></span>\n<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">root@VM_0_12_centos </span><span style="color:#89DDFF;">~]</span><span style="color:#676E95;font-style:italic;"># ps aux|grep nginx</span></span>\n<span class="line"></span></code></pre></div><h3 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-hidden="true">#</a></h3><div class="language-bash"><pre><code><span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> NGINX_HOME=/usr/local/nginx</span></span>\n<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> PATH=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">PATH:</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">NGINX_HOME/sbin</span></span>\n<span class="line"></span></code></pre></div><h2 id="常用配置" tabindex="-1">常用配置 <a class="header-anchor" href="#常用配置" aria-hidden="true">#</a></h2><div class="language-bash"><pre><code><span class="line"><span style="color:#A6ACCD;">server </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  listen 80</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  server_name  code.limchihi.cn</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  location / </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    proxy_pass http://127.0.0.1:3000/</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h3 id="项目配置-http" tabindex="-1">项目配置(http) <a class="header-anchor" href="#项目配置-http" aria-hidden="true">#</a></h3><div class="language-nginx"><pre><code><span class="line"><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;"> $myRoot = /</span><span style="color:#89DDFF;">root</span><span style="color:#A6ACCD;">/fe/stage;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;"> $myServerName = xxxx;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;"> $proxyApi = http://api.ynoo.net/api;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">listen</span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">server_name</span><span style="color:#A6ACCD;">  $myServerName;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    rewrite ^/(.*) https://$server_name$1 permanent;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">root</span><span style="color:#A6ACCD;"> $myRoot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> / {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">try_files</span><span style="color:#A6ACCD;"> $uri $uri/ /index.html =</span><span style="color:#F78C6C;">404</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> /adminAPI {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">proxy_pass</span><span style="color:#A6ACCD;"> $proxyApi;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">error_page</span><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">500</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">502</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">503</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">504</span><span style="color:#A6ACCD;">  /</span><span style="color:#F78C6C;">50x</span><span style="color:#A6ACCD;">.html;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> = /</span><span style="color:#F78C6C;">50x</span><span style="color:#A6ACCD;">.html {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">root</span><span style="color:#A6ACCD;">   html;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h3 id="项目配置-https" tabindex="-1">项目配置(https) <a class="header-anchor" href="#项目配置-https" aria-hidden="true">#</a></h3><div class="language-nginx"><pre><code><span class="line"><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;"> $myServerName = xxxx;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">listen</span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">server_name</span><span style="color:#A6ACCD;">  $myServerName;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    rewrite ^/(.*) https://$server_name$1 permanent;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;"> $myRoot = /</span><span style="color:#89DDFF;">root</span><span style="color:#A6ACCD;">/fe/stage;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;"> $myServerName = ms.ynoo.net;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;"> $myNginxConfRoot = /usr/local/nginx/</span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;">/cert</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;"> $proxyApi = http://api.ynoo.net/api;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">listen</span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">443</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">ssl</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">server_name</span><span style="color:#A6ACCD;">  xxzk.ynoo.net;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">ssl_certificate</span><span style="color:#A6ACCD;">      ${myNginxConfRoot}/${myServerName}/index.pem;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">ssl_certificate_key</span><span style="color:#A6ACCD;">  ${myNginxConfRoot}/${myServerName}/index.key;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">keepalive_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">ssl_session_cache</span><span style="color:#A6ACCD;">    shared:SSL:</span><span style="color:#F78C6C;">5m</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">ssl_session_timeout</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">5m</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">ssl_ciphers</span><span style="color:#A6ACCD;">  HIGH:!aNULL:!MD5;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">ssl_prefer_server_ciphers</span><span style="color:#A6ACCD;">  on;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> / {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">try_files</span><span style="color:#A6ACCD;"> $uri $uri/ /index.html =</span><span style="color:#F78C6C;">404</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> /adminAPI {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">proxy_pass</span><span style="color:#A6ACCD;"> $proxyApi;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">error_page</span><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">500</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">502</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">503</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">504</span><span style="color:#A6ACCD;">  /</span><span style="color:#F78C6C;">50x</span><span style="color:#A6ACCD;">.html;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> = /</span><span style="color:#F78C6C;">50x</span><span style="color:#A6ACCD;">.html {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">root</span><span style="color:#A6ACCD;">   html;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h3 id="api服务https配置" tabindex="-1">api服务https配置 <a class="header-anchor" href="#api服务https配置" aria-hidden="true">#</a></h3><div class="language-nginx"><pre><code><span class="line"><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">listen</span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">server_name</span><span style="color:#A6ACCD;">  xxzk.ynoo.net;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> / {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">proxy_pass</span><span style="color:#A6ACCD;"> http://localhost:</span><span style="color:#F78C6C;">7001</span><span style="color:#A6ACCD;">/;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">proxy_http_version</span><span style="color:#A6ACCD;"> 1.1;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">proxy_set_header</span><span style="color:#A6ACCD;"> Upgrade $http_upgrade;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">proxy_set_header</span><span style="color:#A6ACCD;"> Connection </span><span style="color:#C3E88D;">&#39;upgrade&#39;</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">proxy_set_header</span><span style="color:#A6ACCD;"> Host $host;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">proxy_cache_bypass</span><span style="color:#A6ACCD;"> $http_upgrade;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">listen</span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">443</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">ssl</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">server_name</span><span style="color:#A6ACCD;">  xxzk.ynoo.net;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">ssl_certificate</span><span style="color:#A6ACCD;">      /usr/local/nginx/</span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;">/cert/xxzk.ynoo.net/index.pem;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">ssl_certificate_key</span><span style="color:#A6ACCD;">  /usr/local/nginx/</span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;">/cert/xxzk.ynoo.net/index.key;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">keepalive_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">ssl_session_cache</span><span style="color:#A6ACCD;">    shared:SSL:</span><span style="color:#F78C6C;">5m</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">ssl_session_timeout</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">5m</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">ssl_ciphers</span><span style="color:#A6ACCD;">  HIGH:!aNULL:!MD5;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">ssl_prefer_server_ciphers</span><span style="color:#A6ACCD;">  on;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> / {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">proxy_set_header</span><span style="color:#A6ACCD;"> X-Real-IP $remote_addr;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">proxy_set_header</span><span style="color:#A6ACCD;"> X-Real-Port $remote_port;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">proxy_pass</span><span style="color:#A6ACCD;"> http://</span><span style="color:#F78C6C;">127.0.0.1:7001</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">proxy_pass_request_headers</span><span style="color:#A6ACCD;">      on;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h3 id="history路由配置" tabindex="-1">history路由配置 <a class="header-anchor" href="#history路由配置" aria-hidden="true">#</a></h3><div class="language-nginx"><pre><code><span class="line"><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">listen</span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">server_name</span><span style="color:#A6ACCD;">  localhost;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    index  index.html index.htm;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">root</span><span style="color:#A6ACCD;"> /xxx/xxx;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> / {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">try_files</span><span style="color:#A6ACCD;"> $uri $uri/ /index.html =</span><span style="color:#F78C6C;">404</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h3 id="静态文件校验" tabindex="-1">静态文件校验 <a class="header-anchor" href="#静态文件校验" aria-hidden="true">#</a></h3><div class="language-nginx"><pre><code><span class="line"><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> = /jt0lp6bkO2.txt {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">default_type</span><span style="color:#A6ACCD;"> text/plain;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&#39;8e2bffc79f0305e793dd1e17f6aa6a43&#39;</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#禁止访问的文件或目录</span></span>\n<span class="line"><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span><span style="color:#A6ACCD;"> ^/(\\.</span><span style="color:#89DDFF;">user</span><span style="color:#A6ACCD;">.ini|\\.htaccess|\\.git|\\.svn|\\.project|LICENSE|README.md)</span></span>\n<span class="line"><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">404</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span><span style="color:#A6ACCD;"> .*\\.(gif|jpg|jpeg|png|bmp|swf)$</span></span>\n<span class="line"><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">expires</span><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">30d</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">error_log</span><span style="color:#A6ACCD;"> off;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">access_log</span><span style="color:#A6ACCD;"> /dev/null;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span><span style="color:#A6ACCD;"> .*\\.(js|css)?$</span></span>\n<span class="line"><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">expires</span><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">12h</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">error_log</span><span style="color:#A6ACCD;"> off;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">access_log</span><span style="color:#A6ACCD;"> /dev/null; </span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="certbot安装https" tabindex="-1">certbot安装https <a class="header-anchor" href="#certbot安装https" aria-hidden="true">#</a></h2><div class="language-bash"><pre><code><span class="line"><span style="color:#A6ACCD;">//安装</span></span>\n<span class="line"><span style="color:#A6ACCD;">sudo yum install certbot python2-certbot-nginx</span></span>\n<span class="line"><span style="color:#A6ACCD;">//启动</span></span>\n<span class="line"><span style="color:#A6ACCD;">// nginx.conf路径</span></span>\n<span class="line"><span style="color:#A6ACCD;">certbot --nginx --nginx-server-root=/usr/local/nginx/conf</span></span>\n<span class="line"><span style="color:#A6ACCD;">//自动更新</span></span>\n<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0 0,12 * * * root python -c &#39;import random; import time; time.sleep(random.random() * 3600)&#39; &amp;&amp; certbot renew -q</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sudo tee -a /etc/crontab </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> /dev/null</span></span>\n<span class="line"></span></code></pre></div><h2 id="nginx-优势" tabindex="-1">Nginx 优势 <a class="header-anchor" href="#nginx-优势" aria-hidden="true">#</a></h2><ul><li>高并发高性能</li><li>可扩展性好</li><li>高可靠性</li><li>热部署</li></ul><h2 id="nginx-主要应用场景" tabindex="-1">Nginx 主要应用场景 <a class="header-anchor" href="#nginx-主要应用场景" aria-hidden="true">#</a></h2><ul><li>静态资源服务，通过本地文件系统提供服务</li><li>反向代理服务、负载均衡</li><li>API 服务、权限控制，减少应用服务器压力</li><li>网关服务</li></ul><h2 id="正向代理-forward-proxy" tabindex="-1">正向代理 Forward proxy <a class="header-anchor" href="#正向代理-forward-proxy" aria-hidden="true">#</a></h2><p>正向代理的对象时客户端，服务端看不到真正的客户端。</p><div class="language-nginx"><pre><code><span class="line"><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> { </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> / {     </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 当客户端请求我的时候，我会把请求转发给它      </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># $http_host 要访问的主机名 $request_uri 请求路径      </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">proxy_pass</span><span style="color:#A6ACCD;"> http://$http_host$request_uri;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="反向代理-reverse-proxy" tabindex="-1">反向代理 Reverse proxy <a class="header-anchor" href="#反向代理-reverse-proxy" aria-hidden="true">#</a></h2><p>解决跨域问题，在生产中，可以使用nginx的反向代理来解决跨域：</p><div class="language-nginx"><pre><code><span class="line"><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> {    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">listen</span><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;">;    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">server_name</span><span style="color:#A6ACCD;">   localhost; </span><span style="color:#676E95;font-style:italic;"># 用户访问 localhost，反向代理到 http://www.baidu.com</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> / {        </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">proxy_pass</span><span style="color:#A6ACCD;"> http://www.baidu.com</span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="gzip" tabindex="-1">Gzip <a class="header-anchor" href="#gzip" aria-hidden="true">#</a></h2><p>gzip 是互联网上非常普遍的一种数据压缩格式，对于纯文本来说可以压缩到原大小的 40%，可以节省大量的带宽。启用 gzip 所需的 HTTP 最低版本是 1.1。</p><div class="language-nginx"><pre><code><span class="line"><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span><span style="color:#A6ACCD;"> .*\\. (jpg|png|gif)$ {    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">gzip</span><span style="color:#A6ACCD;"> off; </span><span style="color:#676E95;font-style:italic;">#关闭压缩    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">root</span><span style="color:#A6ACCD;"> xxxx;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span><span style="color:#A6ACCD;"> .*\\. (html|js|css)$ {    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">gzip</span><span style="color:#A6ACCD;"> on; </span><span style="color:#676E95;font-style:italic;">#启用压缩    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">gzip_min_length</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1k</span><span style="color:#A6ACCD;">; </span><span style="color:#676E95;font-style:italic;"># 超过1K的文件才压缩    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">gzip_http_version</span><span style="color:#A6ACCD;"> 1.1; </span><span style="color:#676E95;font-style:italic;"># 启用gzip压缩所需的HTTP最低版本    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">gzip_comp_level</span><span style="color:#A6ACCD;"> 9; </span><span style="color:#676E95;font-style:italic;"># 压缩级别，压缩比率越高，文件被压缩的体积越小    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">gzip_types</span><span style="color:#A6ACCD;"> text/css application/javascript; </span><span style="color:#676E95;font-style:italic;"># 进行压缩的文件类型    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">root</span><span style="color:#A6ACCD;"> xxxx;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="请求限制" tabindex="-1">请求限制 <a class="header-anchor" href="#请求限制" aria-hidden="true">#</a></h2><p>对于大流量恶意的访问，会造成带宽的浪费，给服务器增加压力。往往对于同一 <code>IP</code> 的连接数以及并发数进行限制。 关于请求限制主要有两种类型：</p><ul><li>limit_conn_module 连接频率限制</li><li>limit_req_module 请求频率限制</li></ul><div class="language-nginx"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># $binary_remote_addr 远程IP地址 zone 区域名称 10m内存区域大小</span></span>\n<span class="line"><span style="color:#A6ACCD;">limit_conn_zone $binary_remote_addr zone=coon_zone:</span><span style="color:#F78C6C;">10m</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> {    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># conn_zone 设置对应的共享内存区域 1是限制的数量 </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">limit_conn</span><span style="color:#A6ACCD;"> conn_zone 1;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><div class="language-nginx"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># $binary_remote_addr 远程IP地址 zone 区域名称 10m内存区域大小 rate 为请求频率 1s 一次limit_req_zone $binary_remote_addr zone=req_zone:10m rate=1r/s;</span></span>\n<span class="line"><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> {    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> / {        </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 设置对应的共享内存区域 burst最大请求数阈值 nodelay不希望超过的请求被延迟        </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">limit_req</span><span style="color:#A6ACCD;"> zone=req_zone burst=5 nodelay;   </span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="访问控制" tabindex="-1">访问控制 <a class="header-anchor" href="#访问控制" aria-hidden="true">#</a></h2><div class="language-nginx"><pre><code><span class="line"><span style="color:#A6ACCD;">// 基于 IP 的访问控制</span></span>\n<span class="line"><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span><span style="color:#A6ACCD;"> ^/index.html { </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 匹配 index.html 页面 除了 127.0.0.1 以外都可以访问  </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">deny</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">127.0.0.1</span><span style="color:#A6ACCD;">;  </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">allow</span><span style="color:#A6ACCD;"> all; </span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="防盗链" tabindex="-1">防盗链 <a class="header-anchor" href="#防盗链" aria-hidden="true">#</a></h2><p>防盗链的原理就是根据请求头中 referer 得到网页来源，从而实现访问控制。这样可以防止网站资源被非法盗用，从而保证信息安全，减少带宽损耗，减轻服务器压力。</p><div class="language-nginx"><pre><code><span class="line"><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span><span style="color:#A6ACCD;"> .*\\.(jpg|png|gif)$ { </span><span style="color:#676E95;font-style:italic;"># 匹配防盗链资源的文件类型    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 通过 valid_referers 定义合法的地址白名单 $invalid_referer 不合法的返回403      </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">valid_referers</span><span style="color:#A6ACCD;"> none blocked </span><span style="color:#F78C6C;">127.0.0.1</span><span style="color:#A6ACCD;">;    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> ($invalid_referer) {        </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">403</span><span style="color:#A6ACCD;">;    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="负载均衡-load-balance" tabindex="-1">负载均衡 Load Balance <a class="header-anchor" href="#负载均衡-load-balance" aria-hidden="true">#</a></h2><p>当我们的网站需要解决高并发、海量数据问题时，就需要使用负载均衡来调度服务器。将请求合理的分发到应用服务器集群中的一台台服务器上。</p><div class="language-nginx"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># upstream 指定后端服务器地址</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># weight 设置权重</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># server 中会将 http://webcanteen 的请求转发到 upstream 池中</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">upstream</span><span style="color:#A6ACCD;"> webcanteen {    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">127.0.0.1:66</span><span style="color:#A6ACCD;"> weight=</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">;    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">127.0.0.1:77</span><span style="color:#A6ACCD;"> weight=1;    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">127.0.0.1:88</span><span style="color:#A6ACCD;"> weight=1;}</span></span>\n<span class="line"><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> {    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">location</span><span style="color:#A6ACCD;"> / {        </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">proxy_pass</span><span style="color:#A6ACCD;"> http://webcanteen    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h3 id="后端服务器状态" tabindex="-1">后端服务器状态 <a class="header-anchor" href="#后端服务器状态" aria-hidden="true">#</a></h3><p>down：当前服务器不参与负载均衡 backup：当其他节点都无法使用时的备用服务器 max_fails：允许请求失败的次数，若到达就会休眠 fail_timeout：经过 max_fails 次失败后，服务器的暂停时间，默认为 10s max_conns：限制每个服务器的最大接收连接数</p><div class="language-nginx"><pre><code><span class="line"><span style="color:#89DDFF;">upstream</span><span style="color:#A6ACCD;"> webcanteen { </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">127.0.0.1:66</span><span style="color:#A6ACCD;"> down; </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">127.0.0.1:77</span><span style="color:#A6ACCD;"> backup; </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">127.0.0.1:88</span><span style="color:#A6ACCD;">  max_fails=3 fail_timeout=</span><span style="color:#F78C6C;">10s</span><span style="color:#A6ACCD;">; </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">127.0.0.1:99</span><span style="color:#A6ACCD;"> max_conns=</span><span style="color:#F78C6C;">1000</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h3 id="分配方式" tabindex="-1">分配方式 <a class="header-anchor" href="#分配方式" aria-hidden="true">#</a></h3><p>轮询（默认），每个请求按照时间顺序轮流分配到不同的后端服务器，如果某台后端服务器宕机，Nginx 轮训列表会自动将它去除掉； weight（加权轮询），轮询的加强版，weight 和访问几率成正比，主要用于后端服务器性能不均的场景； ip_hash，每个请求按照访问 IP 的 hash 结果分配，这样每个访问可以固定访问一个后端服务器； url_hash，按照访问 URL 的 hash 结果来分配请求，使得每个 URL 定向到同一个后端服务器上，主要应用于后端服务器为缓存时的场景； 自定义 hash，基于任意关键字作为 hash key 实现 hash 算法的负载均衡； fair，按照后端服务器的响应时间来分配请求，响应时间短则优先分配。</p>',55)];var c=s(e,[["render",function(s,l,p,e,c,t){return a(),n("div",null,o)}]]);export{p as __pageData,c as default};
