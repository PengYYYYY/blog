import{_ as s,c as a,o as n,U as e}from"./chunks/framework.BWp8c4Qg.js";const l="/blog/assets/KHYAuV.BXqd7gDZ.png",D=JSON.parse('{"title":"diff 过程","description":"","frontmatter":{},"headers":[],"relativePath":"font-end-framework/architecture/diff.md","filePath":"font-end-framework/architecture/diff.md","lastUpdated":1711817753000}'),o={name:"font-end-framework/architecture/diff.md"},p=e('<h1 id="diff-过程" tabindex="-1">diff 过程 <a class="header-anchor" href="#diff-过程" aria-label="Permalink to &quot;diff 过程&quot;">​</a></h1><p><img src="'+l+`" alt="img"></p><p>两个框架都是同层比较，深度优先，可以参考树的前序遍历</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> dsf</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">root</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> dealFn</span><span style="color:#89DDFF;"> =</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">node</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">node</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 处理当前节点</span></span>
<span class="line"><span style="color:#82AAFF;">    dealFn</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">left</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#82AAFF;">    dealFn</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">right</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#82AAFF;">  dealFn</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">root</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="vue-的-diff" tabindex="-1">vue 的 diff <a class="header-anchor" href="#vue-的-diff" aria-label="Permalink to &quot;vue 的 diff&quot;">​</a></h2><p>优势：</p><ul><li>新老两棵树：头尾两个节点，四节点间对比</li></ul><p>key的作用：</p><p>复用节点</p><h2 id="react-的-diff-过程" tabindex="-1">react 的 diff 过程 <a class="header-anchor" href="#react-的-diff-过程" aria-label="Permalink to &quot;react 的 diff 过程&quot;">​</a></h2><h3 id="diff-策略" tabindex="-1">diff 策略 <a class="header-anchor" href="#diff-策略" aria-label="Permalink to &quot;diff 策略&quot;">​</a></h3><ul><li>同级比较，Web UI 中 DOM 节点跨层级的移动操作特别少，可以忽略不计。</li><li>拥有不同类型的两个组件将会生成不同的树形结构。</li><li>可以通过 key 来暗示哪些子元素在不同的渲染下能保持稳定。</li></ul><h3 id="diff-过程-1" tabindex="-1">diff 过程 <a class="header-anchor" href="#diff-过程-1" aria-label="Permalink to &quot;diff 过程&quot;">​</a></h3><ul><li>删除: newVNode 不存在时</li><li>替换: VNode 和 newVNode 类型不同或 key 不同时</li><li>更新:有相同类型和 key 但 VNode 和 newVNode 不同时</li></ul>`,14),t=[p];function r(i,c,d,f,y,u){return n(),a("div",null,t)}const h=s(o,[["render",r]]);export{D as __pageData,h as default};
