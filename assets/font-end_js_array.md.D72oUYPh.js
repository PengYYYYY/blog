import{_ as s,c as a,o as n,U as l}from"./chunks/framework.B9byA8Cw.js";const b=JSON.parse('{"title":"数组操作","description":"","frontmatter":{},"headers":[],"relativePath":"font-end/js/array.md","filePath":"font-end/js/array.md","lastUpdated":1710086962000}'),p={name:"font-end/js/array.md"},e=l(`<h1 id="数组操作" tabindex="-1">数组操作 <a class="header-anchor" href="#数组操作" aria-label="Permalink to &quot;数组操作&quot;">​</a></h1><h2 id="遍历操作" tabindex="-1">遍历操作 <a class="header-anchor" href="#遍历操作" aria-label="Permalink to &quot;遍历操作&quot;">​</a></h2><h3 id="for-of-循环" tabindex="-1"><code>for of</code> 循环 <a class="header-anchor" href="#for-of-循环" aria-label="Permalink to &quot;\`for of\` 循环&quot;">​</a></h3><p>可以使用break随时停止循环</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> colors </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">blue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">white</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> (</span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> color </span><span style="color:#89DDFF;">of</span><span style="color:#BABED8;"> colors) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">color</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;blue&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;green&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;white&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="for-循环" tabindex="-1"><code>for</code> 循环 <a class="header-anchor" href="#for-循环" aria-label="Permalink to &quot;\`for\` 循环&quot;">​</a></h3><p>可以使用break随时停止循环,需要维护 <code>index</code> 指针</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> colors </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">blue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">white</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> (</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> index </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> index </span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;"> colors</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> index</span><span style="color:#89DDFF;">++</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> color</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> colors</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">index</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">color</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;blue&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;green&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;white&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="array-foreach" tabindex="-1">array.forEach <a class="header-anchor" href="#array-foreach" aria-label="Permalink to &quot;array.forEach&quot;">​</a></h3><p><code>array.forEach(callback)</code>方法通过在每个数组项上调用<code>callback</code>函数来遍历数组项。 在每次遍历中，都使用以下参数调用<code>callback(item [, index [, array]])</code>：当前遍历项，当前遍历索引和数组本身。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> colors </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">blue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">white</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">colors</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">e</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> index</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">index</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="数组的映射" tabindex="-1">数组的映射 <a class="header-anchor" href="#数组的映射" aria-label="Permalink to &quot;数组的映射&quot;">​</a></h2><h3 id="array-map" tabindex="-1">Array.map <a class="header-anchor" href="#array-map" aria-label="Permalink to &quot;Array.map&quot;">​</a></h3><p><code>array.map(callback)</code>方法通过方法通过在每个数组项上使用<code>callback</code>调用结果来创建一个新数组。在每个遍历中的<code>callback(item[, index[, array]])</code>使用参数调用:当前项、索引和数组本身，并应该返回新项。</p><ul><li><code>array.map</code>创建一个新的映射数组，而不改变原始数组。</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> numbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> newNumbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> numbers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> increment</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">number</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> number</span><span style="color:#89DDFF;"> +</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">newNumbers</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // =&gt; [1, 3, 5]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="array-from" tabindex="-1">Array.from <a class="header-anchor" href="#array-from" aria-label="Permalink to &quot;Array.from&quot;">​</a></h3><p><code>Array.from(arrayLike[, callback])</code> 方法通过在每个数组项上使用 <code>callback</code> 调用结果来创建一个新数组。</p><p>在每个遍历中 <code>callback(item[, index[, array]])</code> 使用参数调用: 当前项、索引和数组本身并且应该返回新项。</p><ul><li><code>Array.from()</code> 创建一个新的映射数组，而不改变原始数组。</li><li><code>Array.from()</code> 更适合从类似数组的对象进行映射。</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> numbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> newNumbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">(numbers</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C792EA;">  function</span><span style="color:#82AAFF;"> increment</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">number</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> number</span><span style="color:#89DDFF;"> +</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">newNumbers</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // =&gt; [1, 3, 5]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="数据的简化" tabindex="-1">数据的简化 <a class="header-anchor" href="#数据的简化" aria-label="Permalink to &quot;数据的简化&quot;">​</a></h2><h3 id="array-reduce" tabindex="-1">Array.reduce <a class="header-anchor" href="#array-reduce" aria-label="Permalink to &quot;Array.reduce&quot;">​</a></h3><p><code>array.reduce(callback[, initialValue])</code> 通过调用 <code>callback</code> 函数来将数组简化为一个值。</p><p>在每次遍历中的 <code>callback(accumulator, item[, index[, array]])</code> 使用用参数调用的: 累加器，当前项，索引和数组本身且应该返回累加器。</p><p>对数字数组求和:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> numbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> summarize</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">accumulator</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> number</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> accumulator</span><span style="color:#89DDFF;"> +</span><span style="color:#BABED8;"> number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> sum </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> numbers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reduce</span><span style="color:#BABED8;">(summarize</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 0</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">sum</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // =&gt; 6</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="数据的连接" tabindex="-1">数据的连接 <a class="header-anchor" href="#数据的连接" aria-label="Permalink to &quot;数据的连接&quot;">​</a></h2><h3 id="array-concat" tabindex="-1">Array.concat <a class="header-anchor" href="#array-concat" aria-label="Permalink to &quot;Array.concat&quot;">​</a></h3><p><code>array.concat(array1[, array2, ...])</code> 将一个或多个数组连接到原始数组。如下所示，连接两个数组：</p><ul><li><code>concat</code> 创建一个新数组，不改变原来的数组，</li><li><code>array.concat(array1 [，array2，...])</code> 接受多个要连接的数组。</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> heroes </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> villains </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">d</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> everyone </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> heroes</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#BABED8;">(villains)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">everyone </span><span style="color:#676E95;font-style:italic;">// [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="展开操作符号" tabindex="-1">展开操作符号 <a class="header-anchor" href="#展开操作符号" aria-label="Permalink to &quot;展开操作符号&quot;">​</a></h3><p>咱们将展开操作符与数组字面量一起使用来连接数组：<code>[...array1, ...array2]</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> heroes </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> villains </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">d</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> names </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;">heroes</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ...</span><span style="color:#BABED8;">villains]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">everyone </span><span style="color:#676E95;font-style:italic;">// [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="获取数组的片段" tabindex="-1">获取数组的片段 <a class="header-anchor" href="#获取数组的片段" aria-label="Permalink to &quot;获取数组的片段&quot;">​</a></h2><h3 id="array-slice" tabindex="-1">Array.slice <a class="header-anchor" href="#array-slice" aria-label="Permalink to &quot;Array.slice&quot;">​</a></h3><p><code>array.slice</code> 创建一个新数组，不改变原来的数组</p><p><code>array.slice([fromIndex [，toIndex]])</code> 返回数组的一个片段，该片段从 <code>fromIndex</code>, 开始，以 <code>toIndex</code> 结尾（不包括 <code>toIndex</code> 本身）。<code>fromIndex</code>可选参数默认为0，<code>toIndex</code> 可选参数默认为 <code>array.length</code>。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> names </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> heroes </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> names</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> villains </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> names</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">heroes </span><span style="color:#676E95;font-style:italic;">// [&quot;a&quot;, &quot;b&quot;]</span></span>
<span class="line"><span style="color:#BABED8;">villains </span><span style="color:#676E95;font-style:italic;">// [&quot;c&quot;, &quot;d&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="array-splice" tabindex="-1">Array.splice <a class="header-anchor" href="#array-splice" aria-label="Permalink to &quot;Array.splice&quot;">​</a></h3><p>该方法向或者从数组中添加或者删除项目，返回被删除的项目。</p><p><code>splice（index,howmany,item1,...itemX)</code></p><ul><li>index 参数：必须，整数，规定添加或者删除的位置，使用负数，从数组尾部规定位置。</li><li>howmany 参数：必须，要删除的数量，如果为 0，则不删除项目。</li><li>item1,...itemX 参数：可选，向数组添加的新项目。</li></ul><blockquote><p>删除指定位置元素</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="查找数组" tabindex="-1">查找数组 <a class="header-anchor" href="#查找数组" aria-label="Permalink to &quot;查找数组&quot;">​</a></h2><h3 id="array-includes" tabindex="-1">Array.includes <a class="header-anchor" href="#array-includes" aria-label="Permalink to &quot;Array.includes&quot;">​</a></h3><p><code>array.includes(itemToSearch [，fromIndex])</code> 返回一个布尔值，<code>array</code> 是否包含 <code>itemToSearch</code>。 可选参数 <code>fromIndex</code>，默认为0，表示开始搜索的索引。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> numbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">numbers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // =&gt; true</span></span>
<span class="line"><span style="color:#BABED8;">numbers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">99</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // =&gt; false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="array-find" tabindex="-1">Array.find <a class="header-anchor" href="#array-find" aria-label="Permalink to &quot;Array.find&quot;">​</a></h4><p>如下所示，找到数组中的第一个偶数：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> numbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> isEven</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">number</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> number</span><span style="color:#89DDFF;"> %</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;"> ===</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> evenNumber </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> numbers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">find</span><span style="color:#BABED8;">(isEven)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">evenNumber</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // =&gt; 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="array-indexof" tabindex="-1">Array.indexOf <a class="header-anchor" href="#array-indexof" aria-label="Permalink to &quot;Array.indexOf&quot;">​</a></h3><p><code>array.indexOf(itemToSearch[, fromIndex])</code> 返回 <code>array</code> 中第一个出现的 <code>itemToSearch</code> 的索引。默认为0的可选参数<code>fromIndex</code>表示开始搜索的索引。</p><p>如果找不到该项，则返回<code>-1</code></p><h2 id="查询数组" tabindex="-1">查询数组 <a class="header-anchor" href="#查询数组" aria-label="Permalink to &quot;查询数组&quot;">​</a></h2><h3 id="array-every" tabindex="-1">Array.every <a class="header-anchor" href="#array-every" aria-label="Permalink to &quot;Array.every&quot;">​</a></h3><p>如果每个项都通过 <code>predicate</code> 检查,则 <code>array.every(predicate)</code> 返回 <code>true</code>。</p><p>在每个遍历 <code>predicate(item[, index[, array]])</code> 上，用参数调用 <code>predicate</code> 函数:当前遍历项、索引和数组本身。</p><p>如下所示，确定数组是否只包含偶数：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> evens </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 6</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> numbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 6</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> isEven</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">number</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> number</span><span style="color:#89DDFF;"> %</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;"> ===</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">evens</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">every</span><span style="color:#BABED8;">(isEven)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // =&gt; true</span></span>
<span class="line"><span style="color:#BABED8;">numbers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">every</span><span style="color:#BABED8;">(isEven)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // =&gt; false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="array-some" tabindex="-1">Array.some <a class="header-anchor" href="#array-some" aria-label="Permalink to &quot;Array.some&quot;">​</a></h3><p>如果有一项通过 <code>predicate</code> 检查,则 <code>array.every(predicate)</code> 返回 <code>true</code>。</p><p>在每个遍历 <code>predicate(item[, index[, array]])</code> 上，用参数调用 <code>predicate</code> 函数:当前遍历项、索引和数组本身。</p><p>如下所示，确定数组是否只包含一个偶数：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> evens </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> numbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 7</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 10</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> isEven</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">number</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> number</span><span style="color:#89DDFF;"> %</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;"> ===</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">evens</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">some</span><span style="color:#BABED8;">(isEven)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // =&gt; false</span></span>
<span class="line"><span style="color:#BABED8;">numbers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">some</span><span style="color:#BABED8;">(isEven)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // =&gt; true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="数组的过滤" tabindex="-1">数组的过滤 <a class="header-anchor" href="#数组的过滤" aria-label="Permalink to &quot;数组的过滤&quot;">​</a></h2><h3 id="array-filter" tabindex="-1">Array.filter <a class="header-anchor" href="#array-filter" aria-label="Permalink to &quot;Array.filter&quot;">​</a></h3><p><code>array.filter(predicate)</code> 方法创建一个新数组, 其包含通过所提供函数实现的测试的所有元素。 在每个遍历 <code>predicate(item[, index[, array]])</code> 上，用参数调用 <code>predicate</code> 函数:当前遍历项、索引和数组本身。</p><ul><li><code>array.filter()</code> 创建一个新数组，而不改变原始数组。</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> numbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 7</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 10</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> isEven</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">number</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> number</span><span style="color:#89DDFF;"> %</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;"> ===</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> evens </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> numbers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#BABED8;">(isEven)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">evens</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // =&gt; [10]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="数组的插入" tabindex="-1">数组的插入 <a class="header-anchor" href="#数组的插入" aria-label="Permalink to &quot;数组的插入&quot;">​</a></h2><h3 id="array-push" tabindex="-1">Array.push <a class="header-anchor" href="#array-push" aria-label="Permalink to &quot;Array.push&quot;">​</a></h3><p>方法将一个或多个项追加到数组的末尾，并返回新的长度</p><ul><li><code>array.push()</code> 会改变原数组</li><li><code>array.push(item1, item2, ..., itemN)</code> 可以添加多个元素。</li></ul><h3 id="array-unshift" tabindex="-1">Array.unshift <a class="header-anchor" href="#array-unshift" aria-label="Permalink to &quot;Array.unshift&quot;">​</a></h3><p>方法将一个或多个项追加到数组的开头，并返回新的长度</p><ul><li><code>array.unshift()</code> 会改变原数组</li><li><code>array.unshift(item1, item2, ..., itemN)</code> 可以添加多个元素。</li></ul><h3 id="展开操作符" tabindex="-1">展开操作符 <a class="header-anchor" href="#展开操作符" aria-label="Permalink to &quot;展开操作符&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> c </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">  ...</span><span style="color:#BABED8;">b</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  ...</span><span style="color:#BABED8;">a</span></span>
<span class="line"><span style="color:#BABED8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="删除数组元素" tabindex="-1">删除数组元素 <a class="header-anchor" href="#删除数组元素" aria-label="Permalink to &quot;删除数组元素&quot;">​</a></h2><h3 id="array-pop" tabindex="-1">Array.pop <a class="header-anchor" href="#array-pop" aria-label="Permalink to &quot;Array.pop&quot;">​</a></h3><p><code>array.pop()</code>方法从数组中删除最后一个元素，然后返回该元素。如下所示，删除<code>colors</code>数组的最后一个元素：</p><ul><li><code>array.pop()</code>会改变原数组</li></ul><h3 id="array-shift" tabindex="-1">Array.shift <a class="header-anchor" href="#array-shift" aria-label="Permalink to &quot;Array.shift&quot;">​</a></h3><p><code>array.shift()</code>方法从数组中删除第一个元素，然后返回该元素</p><ul><li>array.shift() 会改变原数组。</li><li>array.shift() 具有O(n)复杂度。</li></ul><h3 id="array-splice-1" tabindex="-1">Array.splice <a class="header-anchor" href="#array-splice-1" aria-label="Permalink to &quot;Array.splice&quot;">​</a></h3><p><code>array.splice(fromIndex[, removeCount[, item1[, item2[, ...]]]])</code>从数组中删除元素，并插入新的元素。</p><ul><li>array.splice() 会改变原数组</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 从索引1处删除2个元素</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> names </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">张三</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">李四</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">王五</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">赵六</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">names</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">names </span><span style="color:#676E95;font-style:italic;">// =&gt; [&quot;张三&quot;, &quot;赵六&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="利用展开操作符号" tabindex="-1">利用展开操作符号 <a class="header-anchor" href="#利用展开操作符号" aria-label="Permalink to &quot;利用展开操作符号&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> names </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">张三</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">李四</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">王五</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">赵六</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> fromIndex </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> removeCount </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> newNames </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">   ...</span><span style="color:#BABED8;">names</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> fromIndex)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">   ...</span><span style="color:#BABED8;">names</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#BABED8;">(fromIndex </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> removeCount)</span></span>
<span class="line"><span style="color:#BABED8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">newNames </span><span style="color:#676E95;font-style:italic;">// [&quot;张三&quot;, &quot;赵六&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="清空数组" tabindex="-1">清空数组 <a class="header-anchor" href="#清空数组" aria-label="Permalink to &quot;清空数组&quot;">​</a></h2><h3 id="array-length" tabindex="-1">Array.length <a class="header-anchor" href="#array-length" aria-label="Permalink to &quot;Array.length&quot;">​</a></h3><p><code>array.length = 0</code> 删除数组中的所有项目：</p><h3 id="array-splice-2" tabindex="-1">Array.splice <a class="header-anchor" href="#array-splice-2" aria-label="Permalink to &quot;Array.splice&quot;">​</a></h3><p><code>array.splice(fromIndex[, removeCount[, item1[, item2[, ...]]]])</code>从数组中删除元素，并插入新的元素。</p><p>如果<code>removeCount</code>参数被省略，那么<code>array.splice()</code>将删除从<code>fromIndex</code>开始的数组的所有元素。咱们使用它来删除数组中的所有元素：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> colors </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">blue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">black</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">colors</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">colors</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // []</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="填充数组" tabindex="-1">填充数组 <a class="header-anchor" href="#填充数组" aria-label="Permalink to &quot;填充数组&quot;">​</a></h2><h3 id="array-fill" tabindex="-1">Array.fill <a class="header-anchor" href="#array-fill" aria-label="Permalink to &quot;Array.fill&quot;">​</a></h3><p><code>array.fill(value[, fromIndex[, toIndex]])</code> 用从 <code>fromIndex</code> 到 <code>toIndex</code> 的值填充数组(不包括 <code>toIndex</code> 本身)。<code>fromIndex</code> 可选参数默认为0,<code>toIndex</code> 可选参数默认为 <code>array.length</code>。</p><ul><li><code>array.fill()</code> 会改变原数组。</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> numbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">numbers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fill</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">numbers</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // =&gt; [0, 0, 0, 0]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="array-from-1" tabindex="-1">Array.from <a class="header-anchor" href="#array-from-1" aria-label="Permalink to &quot;Array.from&quot;">​</a></h3><p><code>Array.from()</code> 有助于初始化带有对象的特定长度的数组：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> length </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> emptyObjects </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">Array</span><span style="color:#BABED8;">(length)</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#89DDFF;"> {};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">emptyObjects</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // [{}, {}, {}, {}]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="数组的扁平化" tabindex="-1">数组的扁平化 <a class="header-anchor" href="#数组的扁平化" aria-label="Permalink to &quot;数组的扁平化&quot;">​</a></h2><h3 id="array-flat" tabindex="-1">Array.flat <a class="header-anchor" href="#array-flat" aria-label="Permalink to &quot;Array.flat&quot;">​</a></h3><p><code>array.flat([depth])</code> 方法通过递归扁平属于数组的项直到一定深度来创建新数组。 <code>depth</code>可选参数默认为1：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arrays </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 6</span><span style="color:#BABED8;">]]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> flatArray </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arrays</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flat</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">flatArray</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // [0, 1, 3, 5, 2, 4, 6]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><code>array.flat()</code>创建一个新数组，而不会改变原始数组。</li></ul><h2 id="数组的排序" tabindex="-1">数组的排序 <a class="header-anchor" href="#数组的排序" aria-label="Permalink to &quot;数组的排序&quot;">​</a></h2><h3 id="array-sort" tabindex="-1"><code>array.sort()</code> <a class="header-anchor" href="#array-sort" aria-label="Permalink to &quot;\`array.sort()\`&quot;">​</a></h3><p><code>array.sort([compare])</code> 方法对数组的元素进行排序。</p><p>可选参数 <code>compare(a, b)</code> 是一个自定义排序顺的回调函数。如果比较 <code>compare(a, b)</code> 返回的结果</p><ul><li>如果 <code>a</code> 小于 <code>b</code>，在排序后的数组中 <code>a</code> 应该出现在 <code>b</code> 之前，就返回一个小于0的值。</li><li>如果 <code>a</code> 等于 <code>b</code>，就返回 <code>0</code>。</li><li>如果 <code>a</code> 大于 <code>b</code>，就返回一个大于 <code>0</code> 的值。</li><li><code>array.sort()</code> 会改变原数组。</li></ul><p>内部原理</p><p>对于 <code>JS</code> 来说，数组长度大于 <code>10</code> 会采用快排，否则使用插入排序。选择插入排序是因为虽然时间复杂度很差，但是在数据量很小的情况下和 <code>O(N * logN)</code> 相差无几，然而插入排序需要的常数时间很小，所以相对别的排序来说更快。</p><h2 id="数组去重" tabindex="-1">数组去重 <a class="header-anchor" href="#数组去重" aria-label="Permalink to &quot;数组去重&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// set法</span></span>
<span class="line"><span style="color:#BABED8;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">new</span><span style="color:#82AAFF;"> Set</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">])) </span><span style="color:#676E95;font-style:italic;">//[1,2,3,4]</span></span>
<span class="line"><span style="color:#BABED8;">[</span><span style="color:#89DDFF;">...new</span><span style="color:#82AAFF;"> Set</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">])] </span><span style="color:#676E95;font-style:italic;">//[1,2,3,4]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 元素法</span></span>
<span class="line"><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">distinct</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> result</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> of</span><span style="color:#89DDFF;"> this</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">          map</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">n</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#BABED8;">          result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">n</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> result</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">distinct</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //[1,2,3,4]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,123),o=[e];function r(c,t,y,i,D,F){return n(),a("div",null,o)}const u=s(p,[["render",r]]);export{b as __pageData,u as default};
