import{_ as n,c as a,R as l,o as p}from"./chunks/framework.3D9yNSa1.js";const y=JSON.parse('{"title":"静态资源优化","description":"","frontmatter":{},"headers":[],"relativePath":"font-end/optimize/base.md","filePath":"font-end/optimize/base.md","lastUpdated":1725463910000}'),o={name:"font-end/optimize/base.md"};function e(c,s,r,t,D,i){return p(),a("div",null,s[0]||(s[0]=[l(`<h3 id="提升-css-文件加载性能" tabindex="-1">提升 CSS 文件加载性能 <a class="header-anchor" href="#提升-css-文件加载性能" aria-label="Permalink to &quot;提升 CSS 文件加载性能&quot;">​</a></h3><ul><li>使用外链的 <code>css</code></li><li>尽量避免使用 <code>@import</code></li></ul><h3 id="精简-css-代码" tabindex="-1">精简 CSS 代码 <a class="header-anchor" href="#精简-css-代码" aria-label="Permalink to &quot;精简 CSS 代码&quot;">​</a></h3><ul><li>使用缩写语句</li><li>删除不必要的零</li><li>删除不必要的单位，如px</li><li>删除过多的分号</li><li>删除空格和注释</li><li>尽量减少样式表的大小</li></ul><h3 id="合理使用-web-fonts" tabindex="-1">合理使用 Web Fonts <a class="header-anchor" href="#合理使用-web-fonts" aria-label="Permalink to &quot;合理使用 Web Fonts&quot;">​</a></h3><ul><li>将字体部署在 <code>CDN</code> 上</li><li>将字体以 <code>base64</code> 形式保存在 <code>css</code> 中，并通过 <code>localStorage</code> 进行缓存</li></ul><h3 id="css-动画优化" tabindex="-1">CSS 动画优化 <a class="header-anchor" href="#css-动画优化" aria-label="Permalink to &quot;CSS 动画优化&quot;">​</a></h3><ul><li>尽量避免同时动画</li><li>延迟动画初始化</li><li>结合 <code>SVG</code></li></ul><h2 id="提升-js-的执行效率" tabindex="-1">提升 JS 的执行效率 <a class="header-anchor" href="#提升-js-的执行效率" aria-label="Permalink to &quot;提升 JS 的执行效率&quot;">​</a></h2><ul><li>加载元素的顺序 <code>css</code> 文件放在<code>&lt;head&gt;</code>里面, <code>js</code> 放在 <code>body</code> 里面</li><li>使用id选择器查找dom</li><li>保持函数的简洁</li><li>使用事件委托</li><li>使用事件节流</li></ul><h3 id="js-动画优化" tabindex="-1">JS 动画优化 <a class="header-anchor" href="#js-动画优化" aria-label="Permalink to &quot;JS 动画优化&quot;">​</a></h3><ul><li>避免添加大量 <code>js</code> 动画</li><li>尽量使用 <code>css3</code> 动画</li><li>尽量使用 <code>Canvas</code> 动画</li><li>合理使用 <code>requestAnimationFrame</code> 动画代替 <code>setTimeOut</code>, <code>setInterVal</code></li></ul><h3 id="合理使用缓存" tabindex="-1">合理使用缓存 <a class="header-anchor" href="#合理使用缓存" aria-label="Permalink to &quot;合理使用缓存&quot;">​</a></h3><ul><li>合理缓存 <code>Dom</code> 对象</li><li>缓存列表长度</li><li>使用可缓存的 <code>Ajax</code></li></ul><h2 id="减少回流和重绘" tabindex="-1">减少回流和重绘 <a class="header-anchor" href="#减少回流和重绘" aria-label="Permalink to &quot;减少回流和重绘&quot;">​</a></h2><h3 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h3><ul><li>避免过多样式嵌套</li><li>避免使用 <code>css</code> 表达式</li><li>使用绝对定位，脱离文档流</li><li>减少 <code>float</code> 布局</li><li>图片最好设置 <code>width</code> 和 <code>height</code></li><li>使用 <code>viewPort</code> 设置屏幕缩放级别</li><li>尽量简化浏览器不必要的任务，减少页面重新布局</li><li>避免频繁设置样式</li><li>避免使用引起回流和重绘的属性，最好把相应的变量储存起来</li></ul><h3 id="js" tabindex="-1">JS <a class="header-anchor" href="#js" aria-label="Permalink to &quot;JS&quot;">​</a></h3><ul><li>最小化回流和重排</li><li>控制绘制过程和绘制区域</li></ul><h2 id="dom-编程优化" tabindex="-1">Dom 编程优化 <a class="header-anchor" href="#dom-编程优化" aria-label="Permalink to &quot;Dom 编程优化&quot;">​</a></h2><h3 id="控制-dom-大小" tabindex="-1">控制 DOM 大小 <a class="header-anchor" href="#控制-dom-大小" aria-label="Permalink to &quot;控制 DOM 大小&quot;">​</a></h3><ul><li>使用合理的业务逻辑</li><li>延迟加载即将展示的内容</li></ul><h3 id="简化-dom-操作" tabindex="-1">简化 DOM 操作 <a class="header-anchor" href="#简化-dom-操作" aria-label="Permalink to &quot;简化 DOM 操作&quot;">​</a></h3><ul><li>对 <code>dom</code> 节点的操作进行统一处理，再统一插入到 <code>Dom Tree</code> 当中</li><li>可以使用 <code>fragment</code>，尽量不在页面 <code>Dom tree</code> 里直接操作</li><li>使用虚拟dom，通过diff算法简化和减少dom操作</li></ul><h3 id="使用事件委托" tabindex="-1">使用事件委托 <a class="header-anchor" href="#使用事件委托" aria-label="Permalink to &quot;使用事件委托&quot;">​</a></h3><p>事件委托就是利用事件冒泡，只指定一个事件处理程序，就可以管理某一类的所有事件。所有用到按钮的事件（多数鼠标事件和键盘事件）都适合采用事件委托技术， 使用事件委托可以节省内存。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">苹果</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">香蕉</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">凤梨</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// good</span></span>
<span class="line"><span style="color:#BABED8;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ul</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onclick</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">event</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> target</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> event</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">target</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">nodeName</span><span style="color:#89DDFF;"> ===</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">LI</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">innerHTML</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// bad</span></span>
<span class="line"><span style="color:#BABED8;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelectorAll</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">li</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  e</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onclick</span><span style="color:#89DDFF;"> =</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">innerHTML</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="注意程序的局部性" tabindex="-1">注意程序的局部性 <a class="header-anchor" href="#注意程序的局部性" aria-label="Permalink to &quot;注意程序的局部性&quot;">​</a></h3><p>一个编写良好的计算机程序常常具有良好的局部性，它们倾向于引用最近引用过的数据项附近的数据项，或者最近引用过的数据项本身，这种倾向性，被称为局部性原理。有良好局部性的程序比局部性差的程序运行得更快。 局部性通常有两种不同的形式</p><p>时间局部性：在一个具有良好时间局部性的程序中，被引用过一次的内存位置很可能在不远的将来被多次引用。 空间局部性 ：在一个具有良好空间局部性的程序中，如果一个内存位置被引用了一次，那么程序很可能在不远的将来引用附近的一个内存位置。</p><p>时间局部性示例</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> sum</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">arry</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> sum</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> len</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> arry</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> len</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        sum</span><span style="color:#89DDFF;"> +=</span><span style="color:#BABED8;"> arry</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> sum</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 二维数组 </span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> sum1</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">array</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> rows</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> cols</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> j</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> sum</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> rows</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        for</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">j</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> j</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> cols</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> j</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">            sum</span><span style="color:#89DDFF;"> +=</span><span style="color:#BABED8;"> array</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">][</span><span style="color:#BABED8;">j</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> sum</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 二维数组 </span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> sum2</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">array</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> rows</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> cols</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> j</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> sum</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">j</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> j</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> cols</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> j</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        for</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> rows</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">            sum</span><span style="color:#89DDFF;"> +=</span><span style="color:#BABED8;"> array</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">][</span><span style="color:#BABED8;">j</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> sum</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>看一下上面的两个空间局部性示例，像示例中从每行开始按顺序访问数组每个元素的方式，称为具有步长为1的引用模式。 如果在数组中，每隔k个元素进行访问，就称为步长为k的引用模式。 一般而言，随着步长的增加，空间局部性下降。</p><p>这两个例子有什么区别？区别在于第一个示例是按行扫描数组，每扫描完一行再去扫下一行；第二个示例是按列来扫描数组，扫完一行中的一个元素，马上就去扫下一行中的同一列元素。</p><p>数组在内存中是按照行顺序来存放的，结果就是逐行扫描数组的示例得到了步长为 1 引用模式，具有良好的空间局部性；而另一个示例步长为 <code>rows</code>，空间局部性极差。</p><h3 id="判断条件优化" tabindex="-1">判断条件优化 <a class="header-anchor" href="#判断条件优化" aria-label="Permalink to &quot;判断条件优化&quot;">​</a></h3><p>当判断条件数量越来越多时，越倾向于使用 <code>switch</code> 而不是 <code>if-else</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> (color </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">blue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#BABED8;"> (color </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">yellow</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#BABED8;"> (color </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">white</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#BABED8;"> (color </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">black</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#BABED8;"> (color </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#BABED8;"> (color </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">orange</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#BABED8;"> (color </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">pink</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">switch</span><span style="color:#BABED8;"> (color) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  case</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">blue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    break</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  case</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">yellow</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    break</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  case</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">white</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    break</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  case</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">black</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    break</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  case</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    break</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  case</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">orange</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    break</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  case</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">pink</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    break</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>从使用时机来说，当条件值大于两个的时候，使用 <code>switch</code> 更好。不过 <code>if-else</code> 也有 <code>switch</code> 无法做到的事情，例如有多个判断条件的情况下，无法使用 <code>switch</code>。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> results </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">blue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">yellow</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">white</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">black</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">orange</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">pink</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> results[index]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> map </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  condition1</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> result1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  condition2</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> result2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>当条件语句特别多时，使用 <code>switch</code> 和 <code>if-else</code> 不是最佳的选择，这时不妨试一下查找表。查找表可以使用数组和对象来构建。</p>`,43)]))}const b=n(o,[["render",e]]);export{y as __pageData,b as default};
