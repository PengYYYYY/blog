import{_ as e,o as a,c as l,a as i}from"./app.7a07a697.js";const p=JSON.parse('{"title":"webgl基础","description":"","frontmatter":{},"headers":[{"level":2,"title":"着色器与GLSL","slug":"着色器与glsl","link":"#着色器与glsl","children":[]},{"level":2,"title":"图像处理","slug":"图像处理","link":"#图像处理","children":[]},{"level":2,"title":"二维平移，旋转，缩放和矩阵运算","slug":"二维平移-旋转-缩放和矩阵运算","link":"#二维平移-旋转-缩放和矩阵运算","children":[]},{"level":2,"title":"三维","slug":"三维","link":"#三维","children":[]},{"level":2,"title":"光照","slug":"光照","link":"#光照","children":[]},{"level":2,"title":"几何","slug":"几何","link":"#几何","children":[]},{"level":2,"title":"纹理","slug":"纹理","link":"#纹理","children":[]},{"level":2,"title":"阴影","slug":"阴影","link":"#阴影","children":[]},{"level":2,"title":"文字","slug":"文字","link":"#文字","children":[]}],"relativePath":"graphics/webgl/index.md","lastUpdated":1680451879000}'),r={name:"graphics/webgl/index.md"},d=i('<h1 id="webgl基础" tabindex="-1">webgl基础 <a class="header-anchor" href="#webgl基础" aria-hidden="true">#</a></h1><h2 id="着色器与glsl" tabindex="-1">着色器与GLSL <a class="header-anchor" href="#着色器与glsl" aria-hidden="true">#</a></h2><p>WebGL在电脑的GPU中运行, 在编写能够在GPU上运行的代码过程中，每对方法中一个叫顶点着色器， 另一个叫片断着色器，每一对组合起来称作一个 <code>program</code>（着色程序）。</p><p>对于想要绘制的每一个对象，都需要先设置一系列状态值，然后通过调用 <code>gl.drawArrays</code> 或 <code>gl.drawElements</code> 运行一个着色方法对，使得你的着色器对能够在 <code>GPU</code> 上运行。着色器获取数据的4种方法:</p><ul><li>属性（Attributes）和缓冲: 缓冲是发送到GPU的一些二进制数据序列，通常情况下缓冲数据包括位置，法向量，纹理坐标，顶点颜色值等。 你可以存储任何数据。</li><li>全局变量（Uniforms）: 全局变量在着色程序运行前赋值，在运行过程中全局有效。</li><li>纹理（Textures）: 纹理是一个数据序列，可以在着色程序运行中随意读取其中的数据。 大多数情况存放的是图像数据，但是纹理仅仅是数据序列， 你也可以随意存放除了颜色数据以外的其它数据。</li><li>可变量（Varyings）: 可变量是一种顶点着色器给片断着色器传值的方式，依照渲染的图元是点， 线还是三角形，顶点着色器中设置的可变量会在片断着色器运行中获取不同的插值。</li></ul><h2 id="图像处理" tabindex="-1">图像处理 <a class="header-anchor" href="#图像处理" aria-hidden="true">#</a></h2><h2 id="二维平移-旋转-缩放和矩阵运算" tabindex="-1">二维平移，旋转，缩放和矩阵运算 <a class="header-anchor" href="#二维平移-旋转-缩放和矩阵运算" aria-hidden="true">#</a></h2><h2 id="三维" tabindex="-1">三维 <a class="header-anchor" href="#三维" aria-hidden="true">#</a></h2><h2 id="光照" tabindex="-1">光照 <a class="header-anchor" href="#光照" aria-hidden="true">#</a></h2><h2 id="几何" tabindex="-1">几何 <a class="header-anchor" href="#几何" aria-hidden="true">#</a></h2><h2 id="纹理" tabindex="-1">纹理 <a class="header-anchor" href="#纹理" aria-hidden="true">#</a></h2><h2 id="阴影" tabindex="-1">阴影 <a class="header-anchor" href="#阴影" aria-hidden="true">#</a></h2><h2 id="文字" tabindex="-1">文字 <a class="header-anchor" href="#文字" aria-hidden="true">#</a></h2>',13),h=[d];function t(n,s,c,o,u,_){return a(),l("div",null,h)}const b=e(r,[["render",t]]);export{p as __pageData,b as default};
