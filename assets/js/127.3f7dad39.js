(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{475:function(t,a,s){"use strict";s.r(a);var v=s(25),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/PENG_YUE/myImg/raw/master/uPic/wpJYkZ.png",alt:"img"}})]),t._v(" "),s("h2",{attrs:{id:"浏览器安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器安全"}},[t._v("#")]),t._v(" 浏览器安全")]),t._v(" "),s("p",[t._v("浏览器的安全由浏览器控制，主要从浏览器运行机制的安全，同源策略体现出来")]),t._v(" "),s("h3",{attrs:{id:"同源策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同源策略"}},[t._v("#")]),t._v(" 同源策略")]),t._v(" "),s("p",[s("a",{attrs:{href:"/network/crossDomain"}},[t._v("跨域")])]),t._v(" "),s("h3",{attrs:{id:"浏览器沙箱机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器沙箱机制"}},[t._v("#")]),t._v(" 浏览器沙箱机制")]),t._v(" "),s("p",[t._v("Google Chrome 是第一个采取多进程架构的浏览器，其主要进程分为：浏览器进程、渲染进程、插件进程、扩展进程。")]),t._v(" "),s("p",[t._v("插件进程与浏览器进程严格隔离，互不影响。")]),t._v(" "),s("p",[t._v("渲染引擎由 Sandbox 隔离，网页代码要与浏览器内核进程通信、与操作系统通信都需要通过 IPC channel，在其中会进行一些安全检查。")]),t._v(" "),s("p",[t._v("Sandbox 目的：让不可信任的代码运行在一定的环境中，限制其访问隔离区外的资源，如果一定要跨域边界产生数据交换，则只能通过指定的数据通道，比如经过封装的 API 来完成，在这些 API 中会严格检查请求的合法性。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/PENG_YUE/myImg/raw/master/uPic/pPbQaA.png",alt:"img"}})]),t._v(" "),s("h2",{attrs:{id:"跨站脚本攻击（xss）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨站脚本攻击（xss）"}},[t._v("#")]),t._v(" 跨站脚本攻击（XSS）")]),t._v(" "),s("p",[t._v("XSS(Cross-Site Scripting)跨站脚本攻击，黑客通过“HTML注入”篡改了网页，插入了恶意的脚本，从而在用户浏览网页时，控制用户浏览器的一种攻击。\n跨站脚本攻击有可能造成以下影响:")]),t._v(" "),s("ul",[s("li",[t._v("利⽤虚假输⼊表单骗取⽤户个⼈信息。")]),t._v(" "),s("li",[t._v("利⽤脚本窃取⽤户的Cookie值，被害者在不知情的情况下，帮助攻击者发送恶意请求。")]),t._v(" "),s("li",[t._v("显示伪造的⽂章或图⽚。")]),t._v(" "),s("li",[t._v("窃取 Cookie 信息")]),t._v(" "),s("li",[t._v("监听用户行为")]),t._v(" "),s("li",[t._v("可以通过修改 DOM伪造假的登录窗口，用来欺骗用户输入用户名和密码等信息。")]),t._v(" "),s("li",[t._v("在页面内生成浮窗广告")])]),t._v(" "),s("h3",{attrs:{id:"反射型xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射型xss"}},[t._v("#")]),t._v(" 反射型XSS")]),t._v(" "),s("p",[t._v("也称“非持久型XSS”，简单的把用户输入的数据“反射”给浏览器，即黑客往往需要诱使用户“点击”一个恶意链接才能攻击成功。")]),t._v(" "),s("ul",[s("li",[t._v("恶意 JavaScript 脚本属于用户发送给网站请求中的一部 分")]),t._v(" "),s("li",[t._v("随后网站又把恶意 JavaScript 脚本返回给用户")]),t._v(" "),s("li",[t._v("当恶意 JavaScript 脚本在用户页面中 被执行时，黑客就可以利用该脚本做一些恶意操作。")])]),t._v(" "),s("h3",{attrs:{id:"存储型xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储型xss"}},[t._v("#")]),t._v(" 存储型XSS")]),t._v(" "),s("p",[t._v("也称“持久型XSS”，把用户输入的数据“存储”在服务器，具有很强的稳定性。例如在富文本中加入一些 JavaScript 代码的博客文章，黑客把恶意脚本保存到服务端。")]),t._v(" "),s("p",[t._v("存储型 XSS 攻击大致需要经过如下步骤:")]),t._v(" "),s("ul",[s("li",[t._v("首先黑客利用站点漏洞将一段恶意 JavaScript 代码提交到网站的数据库中;")]),t._v(" "),s("li",[t._v("然后用户向网站请求包含了恶意 JavaScript 脚本的页面;")]),t._v(" "),s("li",[t._v("当用户浏览该页面的时候，恶意脚本就会将用户的 Cookie 信息等数据上传到服务器。")])]),t._v(" "),s("h3",{attrs:{id:"xss攻击的危害"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xss攻击的危害"}},[t._v("#")]),t._v(" XSS攻击的危害")]),t._v(" "),s("p",[t._v("利用脚本特性，干脚本能干的一切")]),t._v(" "),s("ul",[s("li",[t._v("获取⻚⾯数据")]),t._v(" "),s("li",[t._v("获取Cookies")]),t._v(" "),s("li",[t._v("劫持前端逻辑")]),t._v(" "),s("li",[t._v("发送请求")]),t._v(" "),s("li",[t._v("偷取⽹站的任意数据")]),t._v(" "),s("li",[t._v("获取用户信息")]),t._v(" "),s("li",[t._v("用户欺骗")])]),t._v(" "),s("h3",{attrs:{id:"防范手段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防范手段"}},[t._v("#")]),t._v(" 防范手段")]),t._v(" "),s("ul",[s("li",[t._v("在 Set-Cookie 时给关键 Cookie 植入 HttpOnly 标识；")]),t._v(" "),s("li",[t._v("服务器对输入脚本进行过滤或转码，转译字符")]),t._v(" "),s("li",[t._v("充分利用 CSP，")]),t._v(" "),s("li",[t._v("把 Cookie 与客户端IP绑定\n"),s("ul",[s("li",[t._v("构造 GET 和 POST 请求")]),t._v(" "),s("li",[t._v("XSS 钓鱼")]),t._v(" "),s("li",[t._v("识别用户浏览器")]),t._v(" "),s("li",[t._v("识别用户安装的软件")]),t._v(" "),s("li",[t._v("获取用户的真实 IP 地址")])])])]),t._v(" "),s("h4",{attrs:{id:"csp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csp"}},[t._v("#")]),t._v(" CSP")]),t._v(" "),s("p",[t._v("内容安全策略 (CSP, Content Security Policy) 是⼀个附加的安全层，⽤于帮助检测和缓解某些类型的攻击，包括跨站脚本 (XSS) 和数据注⼊等攻击。 这些攻击可⽤于实现从数据窃取到⽹站破坏或作为恶意软件分发版本等⽤途。")]),t._v(" "),s("p",[t._v("CSP 本质上就是建⽴⽩名单，开发者明确告诉浏览器哪些外部资源可以加载和执⾏。我们只需要配置规则，如何拦截是由浏览器⾃⼰实现的。我们可以通过这种⽅式来尽量减少 XSS 攻击。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只允许加载本站资源")]),t._v("\nContent"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Security"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Policy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("src "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'self'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只允许加载 HTTPS 协议图⽚")]),t._v("\nContent"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Security"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Policy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" img"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("src https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n// 不允许加载任何来源框架\nContent-Security-Policy: child-src 'none'\n")])])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("实施严格的 CSP 可以有效地防范 XSS 攻击，具体来讲 CSP 有如下几个功能:")]),t._v(" "),s("ul",[s("li",[t._v("限制加载其他域下的资源文件，这样即使黑客插入了一个 JavaScript 文件，这个 JavaScript 文件也是无法被加载的;")]),t._v(" "),s("li",[t._v("禁止向第三方域提交数据，这样用户数据也不会外泄;")]),t._v(" "),s("li",[t._v("禁止执行内联脚本和未授权的脚本;")])]),t._v(" "),s("h3",{attrs:{id:"httponly-cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#httponly-cookie"}},[t._v("#")]),t._v(" HttpOnly Cookie")]),t._v(" "),s("p",[t._v("这是预防XSS攻击窃取⽤户cookie最有效的防御⼿段。Web应 ⽤程序在设置cookie时，将其属性设为HttpOnly，就可以避免该⽹⻚的cookie被客户端恶意JavaScript窃取，保护⽤户cookie信息。")]),t._v(" "),s("h4",{attrs:{id:"⿊名单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⿊名单"}},[t._v("#")]),t._v(" ⿊名单")]),t._v(" "),s("p",[t._v("⽤户的输⼊永远不可信任的，最普遍的做法就是转义输⼊输出的内容，对于引号、尖括号、斜杠进⾏转义")]),t._v(" "),s("h2",{attrs:{id:"csrf（cross-site-request-forgery）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf（cross-site-request-forgery）"}},[t._v("#")]),t._v(" csrf（Cross Site Request Forgery）")]),t._v(" "),s("p",[t._v("它利⽤⽤户已登录的身份，在⽤户毫不知情的情况下，以⽤户的名义完成⾮法操作。")]),t._v(" "),s("ol",[s("li",[t._v("⽤户已经登录了站点 A，并在本地记录了 cookie")]),t._v(" "),s("li",[t._v("在⽤户没有登出站点 A 的情况下（也就是 cookie ⽣效的情况下），访问了恶意攻击者提供的引诱危险站点 B (B 站点要求访问站点A)。")]),t._v(" "),s("li",[t._v("站点 A 没有做任何 CSRF 防御")])]),t._v(" "),s("h3",{attrs:{id:"csrf攻击危害"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf攻击危害"}},[t._v("#")]),t._v(" CSRF攻击危害")]),t._v(" "),s("ul",[s("li",[t._v("利⽤⽤户登录态")]),t._v(" "),s("li",[t._v("⽤户不知情")]),t._v(" "),s("li",[t._v("完成业务请求")]),t._v(" "),s("li",[t._v("盗取⽤户资⾦（转账，消费）")]),t._v(" "),s("li",[t._v("冒充⽤户发帖背锅")]),t._v(" "),s("li",[t._v("损害⽹站声誉")])]),t._v(" "),s("h3",{attrs:{id:"防御"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防御"}},[t._v("#")]),t._v(" 防御")]),t._v(" "),s("ul",[s("li",[t._v("禁⽌第三⽅⽹站带Cookie")]),t._v(" "),s("li",[t._v("Referer Check - Https不发送referer，验证请求的来源站点")]),t._v(" "),s("li",[t._v("加验证码")]),t._v(" "),s("li",[t._v("Cookie加SameSite，用来防止 CSRF 攻击和用户追踪")]),t._v(" "),s("li",[t._v("CSRF Token")])]),t._v(" "),s("h3",{attrs:{id:"cookie-samesite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie-samesite"}},[t._v("#")]),t._v(" cookie,SameSite")]),t._v(" "),s("p",[t._v("SameSite 选项通常有 Strict、Lax 和 None 三个值。")]),t._v(" "),s("ul",[s("li",[t._v("Strict 最为严格。如果 SameSite 的值是 Strict，那么浏览器会完全禁止第三方 Cookie。简言之，如果你从极客时间的页面中访问 InfoQ 的资源，而 InfoQ 的某些 Cookie 设置了 SameSite = Strict 的话，那么这些 Cookie 是不会被发送到 InfoQ 的服 务器上的。只有你从 InfoQ 的站点去请求 InfoQ 的资源时，才会带上这些 Cookie。")]),t._v(" "),s("li",[t._v("Lax 相对宽松一点。在跨站点的情况下，从第三方站点的链接打开和从第三方站点提交 Get 方式的表单这两种方式都会携带 Cookie。但如果在第三方站点中使用 Post 方法， 或者通过 img、iframe 等标签加载的 URL，这些场景都不会携带 Cookie。")]),t._v(" "),s("li",[t._v("而如果使用 None 的话，在任何情况下都会发送 Cookie 数据。")])]),t._v(" "),s("h2",{attrs:{id:"点击劫持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#点击劫持"}},[t._v("#")]),t._v(" 点击劫持")]),t._v(" "),s("p",[t._v("点击劫持是⼀种视觉欺骗的攻击⼿段。攻击者将需要攻击的⽹站通过 iframe 嵌套的⽅式嵌⼊⾃⼰的⽹⻚中，并将 iframe 设置为透明，在⻚⾯中透出⼀个按钮诱导⽤户点击。")]),t._v(" "),s("h3",{attrs:{id:"如何防御"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何防御"}},[t._v("#")]),t._v(" 如何防御")]),t._v(" "),s("p",[t._v("X-FRAME-OPTIONS")]),t._v(" "),s("p",[t._v("X-FRAME-OPTIONS 是⼀个 HTTP 响应头，在现代浏览器有⼀个很好的⽀持。这个 HTTP 响应头 就是为了防御⽤ iframe 嵌套的点击劫持攻击。\n该响应头有三个值可选，分别是")]),t._v(" "),s("ul",[s("li",[t._v("DENY，表示⻚⾯不允许通过 iframe 的⽅式展示")]),t._v(" "),s("li",[t._v("SAMEORIGIN，表示⻚⾯可以在相同域名下通过 iframe 的⽅式展示")]),t._v(" "),s("li",[t._v("ALLOW-FROM，表示⻚⾯可以在指定来源的 iframe 中展示")])]),t._v(" "),s("h2",{attrs:{id:"请求劫持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请求劫持"}},[t._v("#")]),t._v(" 请求劫持")]),t._v(" "),s("ul",[s("li",[t._v("DNS劫持")])]),t._v(" "),s("p",[t._v("顾名思义，DNS服务器(DNS解析各个步骤)被篡改，修改了域名解析的结果，使得访问到的不是预期的ip")]),t._v(" "),s("ul",[s("li",[t._v("请求劫持")])]),t._v(" "),s("p",[t._v("运营商劫持，此时⼤概只能升级HTTPS了")]),t._v(" "),s("h2",{attrs:{id:"其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),s("h3",{attrs:{id:"爬虫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#爬虫"}},[t._v("#")]),t._v(" 爬虫")]),t._v(" "),s("ul",[s("li",[t._v("针对爬虫机器，首先对应用加上防爬工具，比如利用debug")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/PENG_YUE/myImg/raw/master/uPic/3wgpMw.png",alt:"img"}})]),t._v(" "),s("ul",[s("li",[t._v("针对黄牛")])]),t._v(" "),s("p",[t._v("黄牛是让人又爱又恨的一群人，一般防他们就是通过数据策略分析，然后判断是否是黄牛。")])])}),[],!1,null,null,null);a.default=_.exports}}]);