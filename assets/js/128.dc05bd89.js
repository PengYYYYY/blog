(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{477:function(t,e,r){"use strict";r.r(e);var v=r(25),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"https"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" https")]),t._v(" "),r("p",[t._v("SSL(Secure Socket Layer)安全套接层\nTLS(Transport Layer Security)安全层传输协议")]),t._v(" "),r("h2",{attrs:{id:"为什么有https"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么有https"}},[t._v("#")]),t._v(" 为什么有https")]),t._v(" "),r("p",[t._v("http的不足")]),t._v(" "),r("ul",[r("li",[t._v("通信使用明文(不加密)，内容可能会被窃听")]),t._v(" "),r("li",[t._v("不验证通信方的身份，因此有可能遭遇伪装")]),t._v(" "),r("li",[t._v("无法证明报文的完整性，所以有可能已遭篡改")])]),t._v(" "),r("p",[t._v("https 就是加了一层ssl的http。")]),t._v(" "),r("p",[t._v("报文首部不会被加密，报文主体会被加密。")]),t._v(" "),r("h2",{attrs:{id:"加密方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#加密方法"}},[t._v("#")]),t._v(" 加密方法")]),t._v(" "),r("p",[t._v("SSL 采用一种叫做公开密钥加密(Public-key cryptography)的加密处理方式。")]),t._v(" "),r("p",[t._v("近代的加密方法中加密算法是公开的，而密钥是保密的。通过这种方式得以保持加密方法的安全性。加密和解密都会用到密钥。没有密钥就无法对密码解密，反过来说，任何人只要持有密钥就能解密了。如果密钥被攻击者获得，那加密也就失去了意义。")]),t._v(" "),r("h3",{attrs:{id:"共享密钥加密"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#共享密钥加密"}},[t._v("#")]),t._v(" 共享密钥加密")]),t._v(" "),r("p",[t._v("加密和解密同用一个密钥的方式称为共享密钥加密(Common key crypto system)，也被叫做对称密钥加密。")]),t._v(" "),r("p",[t._v("以共享密钥方式加密时必须将密钥也发给对方。在互联网上转发密钥时，如果通信被监听那么密钥就可会落入攻击者之手，同时也就失去了加密的意义。另外还得设法安全地保管接收到的密钥。")]),t._v(" "),r("h3",{attrs:{id:"使用两把密钥的公开密钥加密"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用两把密钥的公开密钥加密"}},[t._v("#")]),t._v(" 使用两把密钥的公开密钥加密")]),t._v(" "),r("p",[t._v("公开密钥加密使用一对非对称的密钥。一把叫做私有密钥 (private key)，另一把叫做公开密钥(public key)。私有密钥不能让其他任何人知道，而公开密钥则可以随意发布，任何人都可以获得。使用公开密钥加密方式，发送密文的一方使用对方公开密钥进行加密处理，对方收到被加密的信息后，再使用自己的私有密钥进行解密。")]),t._v(" "),r("h3",{attrs:{id:"混合加密方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#混合加密方式"}},[t._v("#")]),t._v(" 混合加密方式")]),t._v(" "),r("p",[t._v("HTTPS 采用共享密钥加密和公开密钥加密两者并用的混合加密机制。若密钥能够实现安全交换，那么有可能会考虑仅使用公开密钥加密来通信。但是公开密钥加密与共享密钥加密相比，其处理速度要慢。")]),t._v(" "),r("h3",{attrs:{id:"证明公开密钥正确性的证书"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#证明公开密钥正确性的证书"}},[t._v("#")]),t._v(" 证明公开密钥正确性的证书")]),t._v(" "),r("p",[t._v("公开密钥加密方式无法证明公开密钥本身就是货真价实的公开密钥，使用由数字证书认证机构(CA，Certificate Authority)和其相关机关颁发的公开密钥证书。")]),t._v(" "),r("p",[t._v("公钥证书也可叫做数字证书或直接称为证书。接到证书的客户端可使用数字证书认证机构的公开密钥，对那张证书上的数字签名进行验证，一旦验证通过，客户端便可明确两件事:")]),t._v(" "),r("ul",[r("li",[t._v("认证服务器的公开密钥的是真实有效的数字证书认证机构。")]),t._v(" "),r("li",[t._v("服务器的公开密钥是值得信赖的。")])]),t._v(" "),r("h3",{attrs:{id:"https的通信机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#https的通信机制"}},[t._v("#")]),t._v(" https的通信机制")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://gitee.com/PENG_YUE/myImg/raw/master/uPic/QpC7V4.png",alt:"img"}})]),t._v(" "),r("ol",[r("li",[t._v("客户端通过发送 Client Hello 报文开始 SSL 通信。报文中包含客户端支持的 SSL 的指定版本、加密组件(Cipher Suite)列表(所使用的加密算法及密钥长度等)。")]),t._v(" "),r("li",[t._v("服务器可进行 SSL 通信时，会以 Server Hello 报文作为应答。和客户端一样，在报文中包含 SSL 版本以及加密组件。服务器的加密组件内容是从接收到的客户端加密组件内筛选出来的。")]),t._v(" "),r("li",[t._v("之后服务器发送 Certificate 报文。报文中包含公开密钥证书。")]),t._v(" "),r("li",[t._v("最后服务器发送 Server Hello Done 报文通知客户端，最初阶段的 SSL 握手协商部分结束。")]),t._v(" "),r("li",[t._v("SSL 第一次握手结束之后，客户端以 Client Key Exchange 报文作为回应。报文中包含通信加密中使用的一种被称为 Pre-master secret 的随机密码串。该报文已用步骤 3 中的公开密钥进行加密。")]),t._v(" "),r("li",[t._v("接着客户端继续发送 Change Cipher Spec 报文。该报文会提示服务器，在此报文之后的通信会采用 Pre-master secret 密钥加密。")]),t._v(" "),r("li",[t._v("客户端发送 Finished 报文。该报文包含连接至今全部报文的整体校验值。这次握手协商是否能够成功，要以服务器是否能够正确解密该报文作为判定标准。")]),t._v(" "),r("li",[t._v("服务器同样发送 Change Cipher Spec 报文。")]),t._v(" "),r("li",[t._v("服务器同样发送 Finished 报文。")]),t._v(" "),r("li",[t._v("服务器和客户端的 Finished 报文交换完毕之后，SSL 连接 就算建立完成。当然，通信会受到 SSL 的保护。从此处开始进行应用 层协议的通信，即发送 HTTP 请求。")]),t._v(" "),r("li",[t._v("应用层协议通信，即发送 HTTP 响应。")]),t._v(" "),r("li",[t._v("最后由客户端断开连接。断开连接时，发送 close_notify 报 文。上图做了一些省略，这步之后再发送 TCP FIN 报文来关闭与 TCP 的通信。")])]),t._v(" "),r("p",[t._v("HTTPS 使用 SSL(Secure Socket Layer) 和 TLS(Transport Layer Security)这两个协议。\nSSL 技术最初是由浏览器开发商网景通信公司率先倡导的，开发过 SSL3.0 之前的版本。目前主导权已转移到 IETF(Internet Engineering Task Force，Internet 工程任务组)的手中。\nIETF 以 SSL3.0 为基准，后又制定了 TLS1.0、TLS1.1 和 TLS1.2。TSL 是以 SSL 为原型开发的协议，有时会统一称该协议 为 SSL。当前主流的版本是 SSL3.0 和 TLS1.0。\n由于 SSL1.0 协议在设计之初被发现出了问题，就没有实际投入 使用。SSL2.0 也被发现存在问题，所以很多浏览器直接废除了该协议版本。")]),t._v(" "),r("h3",{attrs:{id:"https比http要慢2到100倍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#https比http要慢2到100倍"}},[t._v("#")]),t._v(" HTTPS比HTTP要慢2到100倍")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://gitee.com/PENG_YUE/myImg/raw/master/uPic/sPakpp.png",alt:"img"}})]),t._v(" "),r("ul",[r("li",[t._v("通信慢")]),t._v(" "),r("li",[t._v("消耗大量CPU 及内存等资源，导致处理速度变慢。")]),t._v(" "),r("li",[t._v("SSL 必须进行加密处理。在服务器和客户端都需要进行 加密和解密的运算处理。因此从结果上讲，比起 HTTP 会更多地消耗服务器和客户端的硬件资源，导致负载增强。")])])])}),[],!1,null,null,null);e.default=_.exports}}]);