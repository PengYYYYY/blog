(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{430:function(s,t,a){"use strict";a.r(t);var n=a(31),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"jwt与session-cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt与session-cookie"}},[s._v("#")]),s._v(" jwt与session-cookie")]),s._v(" "),a("p",[s._v("基于session和基于jwt的方式的主要区别就是用户的状态保存的位置，session是保存在服务端的，而jwt是保存在客户端的。")]),s._v(" "),a("h2",{attrs:{id:"jwt的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt的原理"}},[s._v("#")]),s._v(" JWT的原理")]),s._v(" "),a("p",[s._v("简单来说，JWT只是一个具有以下格式的字符串,它由三部分组成：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("signature\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// header")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typ"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"JWT"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"alg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HS256"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//算法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// payload")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"userId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//存一个用户信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// signature")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("iss")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("issuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("：签发人\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("exp")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expiration time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("：过期时间\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("：主题\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("aud")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("audience"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("：受众\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nbf")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Not Before"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("：生效时间\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("iat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Issued At"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("：签发时间\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("jti")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JWT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("：编号\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("签名使用以下伪代码计算：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("data "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("base64urlEncode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" header "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" “"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("” "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("base64urlEncode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" payload "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nhashedData "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" secret "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 密钥很重要")]),s._v("\nsignature "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("base64urlEncode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" hashedData "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"jwt-如何保护我们的数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt-如何保护我们的数据"}},[s._v("#")]),s._v(" JWT 如何保护我们的数据")]),s._v(" "),a("p",[s._v("JWT 内的数据是经过编码和签名的，而不是加密的。编码数据的目的是转换数据的结构。签名数据允许数据接收器验证数据源的真实性。\n因为服务器是知道密钥的，通过上面的三步就可以得到一个哈希值，然后进行比较后做匹配。")]),s._v(" "),a("h2",{attrs:{id:"jwt的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt的优点"}},[s._v("#")]),s._v(" JWT的优点")]),s._v(" "),a("ol",[a("li",[s._v("可扩展性好 应用程序分布式部署的情况下，session需要做多机数据共享，通常可以存在数据库或者redis里面。而jwt不需要。")]),s._v(" "),a("li",[s._v("无状态 jwt不在服务端存储任何状态。RESTful API的原则之一是无状态，发出请求时，总会返回带有参数的响应，不会产生附加影响。用户的认证状态引入这种附加影响，这破坏了这一原则。另外jwt的载荷中可以存储一些常用信息，用于交换信息，有效地使用 JWT，可以降低服务器查询数据库的次数。")])]),s._v(" "),a("h2",{attrs:{id:"jwt的缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt的缺点"}},[s._v("#")]),s._v(" JWT的缺点")]),s._v(" "),a("ul",[a("li",[s._v("安全性")])]),s._v(" "),a("p",[s._v("由于jwt的payload是使用base64编码的，并没有加密，因此jwt中不能存储敏感数据。而session的信息是存在服务端的，相对来说更安全。")]),s._v(" "),a("ul",[a("li",[s._v("性能")])]),s._v(" "),a("p",[s._v("jwt太长。由于是无状态使用JWT，所有的数据都被放到JWT里，如果还要进行一些数据交换，那载荷会更大，经过编码之后导致jwt非常长，cookie的限制大小一般是4k，cookie很可能放不下，所以jwt一般放在local storage里面。并且用户在系统中的每一次http请求都会把jwt携带在Header里面，http请求的Header可能比Body还要大。而sessionId只是很短的一个字符串，因此使用jwt的http请求比使用session的开销大得多。")]),s._v(" "),a("ul",[a("li",[s._v("一次性")])]),s._v(" "),a("p",[s._v("无状态是jwt的特点，但也导致了这个问题，jwt是一次性的。想修改里面的内容，就必须签发一个新的jwt。无法废弃通过上面jwt的验证机制可以看出来，一旦签发一个jwt，在到期之前就会始终有效，无法中途废弃。")]),s._v(" "),a("ul",[a("li",[s._v("续签")])]),s._v(" "),a("p",[s._v("要改变jwt的有效时间，就要签发新的jwt。最简单的一种方式是每次请求刷新jwt，即每个http请求都返回一个新的jwt。这个方法不仅暴力不优雅，而且每次请求都要做jwt的加密解密，会带来性能问题。")]),s._v(" "),a("h2",{attrs:{id:"auth2-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auth2-0"}},[s._v("#")]),s._v(" auth2.0")]),s._v(" "),a("p",[s._v("OAuth协议，是一种授权协议，常用于用户权限的授权。")]),s._v(" "),a("h3",{attrs:{id:"授权码流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#授权码流程"}},[s._v("#")]),s._v(" 授权码流程")]),s._v(" "),a("p",[s._v("采用Authorization Code获取Access Token的授权验证流程又被称为Web Server Flow，适用于所有有Server端的应用。有以下的几个步骤：")]),s._v(" "),a("ol",[a("li",[s._v("通过client_id请求授权服务端，获取Authorization Code。")]),s._v(" "),a("li",[s._v("通过Authorization Code、client_id、client_secret（保存在服务端）请求授权服务端，在验证完Authorization Code是否失效以及接入的客户端信息是否有效。授权服务端生成Access Token和Refresh Token并返回给客户端。")]),s._v(" "),a("li",[s._v("客户端通过得到的Access Token请求资源服务应用，获取需要的且在申请的Access Token权限范围内的资源信息。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);