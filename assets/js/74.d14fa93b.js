(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{425:function(t,a,e){"use strict";e.r(a);var r=e(25),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"数据流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据流"}},[t._v("#")]),t._v(" 数据流")]),t._v(" "),e("p",[t._v("双方数据流对比，")]),t._v(" "),e("h2",{attrs:{id:"vue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" vue")]),t._v(" "),e("p",[t._v("数据可变")]),t._v(" "),e("h3",{attrs:{id:"数据响应式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据响应式"}},[t._v("#")]),t._v(" 数据响应式")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("vue2\n使用了核心api，Object.defineProperty，")])]),t._v(" "),e("li",[e("p",[t._v("vue3\n使用了ES6 的 Proxy，对数据进行变化侦测，添加 getter 和 setter，这样就知道数据何时被读取和修改")])])]),t._v(" "),e("h3",{attrs:{id:"数据收集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据收集"}},[t._v("#")]),t._v(" 数据收集")]),t._v(" "),e("p",[t._v("核心是观察者模式")]),t._v(" "),e("ul",[e("li",[t._v("Vue对于每个数据都收集了与之相关的依赖，这里的依赖其实就是一个对象，保存有该数据的旧值及数据变化后需要执行的函数。每个响应式的数据变化时会遍历通知其对应的每个依赖，依赖收到通知后会判断一下新旧值有没有发生变化，如果变化则执行回调函数响应数据变化（比如修改 dom）。")])]),t._v(" "),e("h2",{attrs:{id:"react"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" react")]),t._v(" "),e("p",[t._v("数据不可变")]),t._v(" "),e("p",[t._v("不可变数据计算数据diff，需要用特定的api去处罚数据的变化。")]),t._v(" "),e("h2",{attrs:{id:"差异"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#差异"}},[t._v("#")]),t._v(" 差异")]),t._v(" "),e("p",[t._v("vue为immutable的代表，react为mutable。")])])}),[],!1,null,null,null);a.default=s.exports}}]);