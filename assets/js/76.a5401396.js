(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{427:function(t,a,e){"use strict";e.r(a);var v=e(25),s=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"状态系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#状态系统"}},[t._v("#")]),t._v(" 状态系统")]),t._v(" "),e("p",[t._v("Vuex 与 redux 都是 Flux 架构的一种实现。Flux 清晰确立了数据管理场景下各种职能单位，其主要准则有：")]),t._v(" "),e("ul",[e("li",[t._v("中心化状态管理")]),t._v(" "),e("li",[t._v("状态只能通过专门突变单元进行变更")]),t._v(" "),e("li",[t._v("应用层通过发送信号(一般称 action)，触发变更")])]),t._v(" "),e("h2",{attrs:{id:"vuex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" vuex")]),t._v(" "),e("ul",[e("li",[t._v("通过“模块化”设计，隔离数据单元")]),t._v(" "),e("li",[t._v("提供 getter 机制，提高代码复用性")]),t._v(" "),e("li",[t._v("通过 Vue.$watch 方法，实现数据流的更新")])]),t._v(" "),e("h3",{attrs:{id:"信号机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#信号机制"}},[t._v("#")]),t._v(" 信号机制")]),t._v(" "),e("p",[t._v("通过 dispatch 方法，回调触发事先注册的_mutations方法。")]),t._v(" "),e("p",[t._v("dispatch -> action, commit -> mutation。")]),t._v(" "),e("h2",{attrs:{id:"vuex-中设计的不太好的地方"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex-中设计的不太好的地方"}},[t._v("#")]),t._v(" vuex 中设计的不太好的地方")]),t._v(" "),e("h3",{attrs:{id:"严格模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#严格模式"}},[t._v("#")]),t._v(" 严格模式")]),t._v(" "),e("p",[t._v("通过严格模式，开启"),e("code",[t._v("strict: true")]),t._v("，严格模式中会深度监测状态树来检测不合规的状态变更，确保在发布环境下关闭严格模式，以避免性能损失。")])])}),[],!1,null,null,null);a.default=s.exports}}]);